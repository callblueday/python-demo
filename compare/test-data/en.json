{
"ext-i18n/auriga/i18n": {
    "auriga_forward_time": "move forward at power [POWER] % for[TIME] secs",
    "auriga_backward_time": "move backward at power [POWER] % for [TIME] secs",
    "auriga_turnleft_time": "turn left at power[POWER] % for [TIME] secs",
    "auriga_turnright_time": "turn right at power[POWER] % for [TIME] secs",
    "auriga_move": "[MOVE_DIRECTION] at power [POWER] %",
    "auriga_move_wheel_speed": "left wheel at power [POWER_LEFT] %，right wheel at power[POWER_RIGHT] %",
    "auriga_move_stop": "stop moving",
    "auriga_run_motor": "DC motor [PORT] [ROTATE] rotates at power[POWER] %",
    "auriga_run_servo": "servo [PORT] [SLOT] positioned at [DEGREE] angle",
    "auriga_run_fan": "fan [PORT] [FAN_ROTATE] rotates",
    "auriga_run_shutter": "shutter [PORT] [SHUTTER_ACTION]",
    "auriga_show_led_time": "turn on [LED_POSTION] light with color [COLOR] for [TIME] secs",
    "auriga_show_led": "turn on [LED_POSTION] light with color [COLOR]",
    "auriga_show_led_rgb": "turn on [LED_POSTION] light with color red[R] green [G] blue [B]",
    "auriga_sound_play_note": "play note[NOTE]for[BEAT] beat",
    "auriga_sound_play_hz": "play sound at frequency of [HZ] Hz for [TIME] secs",
    "auriga_show_face_time": "LED panel [PORT] shows image[FACE_PANEL] for[TIME] secs",
    "auriga_show_face": "LED panel [PORT] shows image [FACE_PANEL]",
    "auriga_show_face_position": "LED panel [PORT] shows image [FACE_PANEL] at x: [X] y: [Y]",
    "auriga_show_text": "LED panel [PORT] shows text [TEXT] ",
    "auriga_show_text_position": "LED panel[PORT] shows text [TEXT] at x: [X] y: [Y]",
    "auriga_show_number": "LED panel [PORT] shows number[NUMBER]",
    "auriga_show_time": "LED panel [PORT] shows time [NUMBER1]：[NUMBER2]",
    "auriga_show_face_off": "LED panel [PORT] clears screen",
    "auriga_show_face_point": "LED panel [PORT] lights up at x: [X] y: [Y]",
    "auriga_show_face_off_point": "LED panel[PORT] lights off at x: [X] y: [Y]",
    "auriga_show_face_toogle_point": "LED panel[PORT] lights on and off at x: [X] y: [Y]",
    "auriga_event_face_on_point": "LED panel[PORT] at x: [X] y: [Y] lighted up？",
    "auriga_show_external_led_time": "RGB LED [PORT] all light up[LED_POSTION] light with color [COLOR] for [TIME] secs",
    "auriga_show_external_led": "RGB LED [PORT] all light up [LED_POSTION] light with color [COLOR]",
    "auriga_show_external_led_rgb": "RGB LED [PORT] all light up [LED_POSTION] with color red [R] green[G] blue [B]",
    "auriga_show_ledstrip_effect": "LED strip [PORT] [SLOT] light up [LED_STRIP] with the effect [LED_MODE]",
    "auriga_show_all_ledstrip_color": "LED strip [PORT] [SLOT] all lights with color [COLOR_LIST]",
    "auriga_show_ledstrip_color": "LED strip [PORT] [SLOT] [POS] light with color [COLOR_LIST]",
    "auriga_show_ledstrip_rbg": "LED strip [PORT] [SLOT] [POS] light with color red [R] green [G] blue [B]",
    "auriga_show_7segments_number": "set 7-segments display [PORT] number [NUMBER]",
    "auriga_event_obstacle": "obstacles ahead?",
    "auriga_detect_light": "light intensity",
    "auriga_detect_loudness": "loudness",
    "auriga_detect_temperature": "temperature",
    "auriga_event_linefollower": "black line detected？",
    "auriga_detect_external_ultrasonic": "ultrasonic sensor [PORT] distance",
    "auriga_detect_external_light": "light sensor [PORT] light intensity",
    "auriga_detect_external_loudness": "sound sensor [PORT] shows volume",
    "auriga_detect_external_linefollower": "line-following sensor [PORT] shows value",
    "auriga_event_external_linefollower": "line-follwing sensor[PORT] detects [LINEFOLLOW_STATE] to be [BLACK_WHITE] ？",
    "auriga_detec_temperature": "temperature sensor [PORT] [SLOT] Celcius（℃）",
    "auriga_detect_humiture": "humiture sensor [PORT] [TEMP_HUMITURE]",
    "auriga_event_touch": "touch sensor[PORT] touched？",
    "auriga_detect_compass": "electronic compass [PORT] towards the north",
    "auriga_event_flame": "flame sensor [PORT] detects flame？",
    "auriga_detect_flame": "flame sensor [PORT] shows value",
    "auriga_event_special_gas": "gas sensor [PORT] detects special gas？",
    "auriga_detect_gas": "gas sensor[PORT] shows value",
    "auriga_detect_board_gyro_angle": "on-board gyro[AXIS] angle",
    "auriga_detect_gyro_angle": "gyroscope [AXIS] angle",
    "auriga_event_pir_motion": "PIR sensor [PORT] detects human's motion？",
    "auriga_event_button_press": "button [PORT] [FOUR_KEY] pressed？",
    "auriga_event_limit_switch": "limit switch[PORT] [SLOT] pressed？",
    "auriga_detect_potentiometer": "potentiometer [PORT] shows value",
    "auriga_detect_joystick": "joystick [PORT] [AXIS_X_Y] shows value",
    "auriga_detect_infrared": "IR receiver [PORT] ",
    "auriga_event_ir_remote": "IR remote [REMOTE_KEY] pressed？",
    "auriga_detect_timer": "timer",
    "auriga_reset_timer": "reset timer",
    "auriga_when_board_launch": "when mBot Ranger(Auriga) starts up",
    "auriga_when_receive_message": "when receiving[BROADCAST_OPTION]",
    "auriga_comm_send_message": "broadcast [BROADCAST_INPUT]",
    "auriga_run_encoder_motor": "encoder motor [PORT] [SLOT] [ROTATE] rotates [DEGREE] at power[POWER] %",
    "auriga_run_stepper_motor_pos": "stepping motor [PORT] [ROTATE] rotates with a distance of [DISTANCE] steps,at a speed of [POWER] stp/min",
    "auriga_run_smart_servo_to_zero": "smart servo [INDEX] rotates to starting position",
    "auriga_run_smart_servo": "smart servo [INDEX] [ROTATE]rotates at speed of [POWER]",
    "auriga_run_smart_servo_absolute": "smart servo [INDEX] [ROTATE] rotates by [POSITION] degree at speed of [POWER]r/min",
    "auriga_run_smart_servo_to_relative": "smart servo [INDEX] [ROTATE] rotates by [DEGREE] degree at speed of[POWER]r/min",
    "auriga_run_brushless_motor": "brushless motor[PORT] [ROTATE] rotates at power[POWER] %",
    "auriga_show_all_led_time": "all lights on with color [COLOR] for [TIME] secs",
    "auriga_show_all_led": "all lights on with color[COLOR]",
    "auriga_show_all_led_rgb": "all lights on with color red [R] green [G] blue [B]",
    "auriga_detect_obstacle_distance": "distance of obstacles ahead",
    "auriga_run_board_encoder_motor": "encoder motor [PORT] [ROTATE] rotates at power[POWER]%",
    "auriga_run_board_encoder_motor_speed": "encoder motor [PORT] [ROTATE] rotates at power[POWER]%",
    "auriga_run_board_encoder_motor_pos": "encoder motor [PORT] [ROTATE] rotates by [DEGREE] degree at a speed of[POWER] r/min",
    "auriga_detect_angle": "[AXIS] tilt angle",
    "auriga_event_shake": "when shaken？",
    "menu_led_position_all": "all",
    "menu_led_position_left": "left",
    "menu_led_position_right": "right",
    "menu_shutter_press": "pressed",
    "menu_shutter_release": "release",
    "menu_shutter_focusing": "focusing",
    "menu_shutter_stop_focusing": "stop focusing",
    "menu_clockwise": "clockwise",
    "menu_anti_clockwise": "anti clockwise",
    "menu_rotate_stop": "stop",
    "menu_beat_half": "half",
    "menu_beat_quarter": "quarter",
    "menu_beat_eighth": "eighth",
    "menu_beat_whole": "whole",
    "menu_beat_double": "double",
    "menu_beat_zero": "stop",
    "menu_move_forward": "forward",
    "menu_move_backward": "backward",
    "menu_move_left": "turn left",
    "menu_move_right": "turn right",
    "menu_left": "left",
    "menu_right": "right",
    "menu_both": "both",
    "menu_none": "none",
    "menu_black": "black",
    "menu_white": "white",
    "menu_slot1": "slot1",
    "menu_slot2": "slot2",
    "menu_port1": "port1",
    "menu_port2": "port2",
    "menu_port3": "port3",
    "menu_port4": "port4",
    "menu_port5": "port5",
    "menu_port6": "port6",
    "menu_port7": "port7",
    "menu_port8": "port8",
    "menu_port9": "port9",
    "menu_port10": "port10",
    "menu_humiture": "humidity",
    "menu_temperature": "temperature",
    "menu_axis_x": "x-axis",
    "menu_axis_y": "y-axis",
    "menu_axis_z": "z-axis",
    "menu_key1": "key 1",
    "menu_key2": "key 2",
    "menu_key3": "key 3",
    "menu_key4": "key 4",
    "menu_remote_up": "up",
    "menu_remote_down": "down",
    "menu_remote_left": "left",
    "menu_remote_right": "right",
    "menu_remote_setting": "setting",
    "menu_remote_normal": "normal",
    "menu_remote_marquee": "marquee",
    "menu_remote_breathe": "breathe",
    "menu_color_red": "red",
    "menu_color_orange": "orange",
    "menu_color_yellow": "yellow",
    "menu_color_green": "green",
    "menu_color_cyan": "cyan",
    "menu_color_blue": "blue",
    "menu_color_purple": "purple",
    "menu_motor_port1": "motor port1",
    "menu_motor_port2": "motor port2",
    "menu_on_board": "on board",
    "menu_press": "pressed",
    "menu_release": "released",
    "menu_on_board1": "onBoard1",
    "menu_on_board2": "onBoard2",
    "menu_on_board_left": "onBoard left",
    "menu_on_board_right": "onBoard right",
    "auriga":"mBot Ranger",
    "action": "Action",
    "show": "Show",
    "sensor": "Sensor"
},
"ext-i18n/codey/i18n": {
    "codey": "Codey",
    "meos_move_forward_with_time": "move forward at power [POWER] % for [TIME] secs",
    "meos_move_backward_with_time": "move backward at power [POWER] % for [TIME] secs",
    "meos_move_left_with_time": "turn left at power [POWER] % for [TIME] secs",
    "meos_move_right_with_time": "turn right at power [POWER] % for [TIME] secs",
    "meos_move_left_with_angle": "turn left [ICON_LEFT] [ANGLE] degrees until done",
    "meos_move_right_with_angle": "turn right [ICON_RIGHT] [ANGLE] degrees until done",
    "meos_move": "[DIRECTION] at power [POWER] %",
    "meos_move_with_motors": "left wheel at power [LEFT_POWER] % and right wheel at power [RIGHT_POWER] %",
    "meos_move_stop": "stop motion",
    "meos_rocky_event_obstacles_ahead": "[ICON_SENSOR] obstacles ahead?",
    "meos_event_is_color": "[ICON_SENSOR] the color is [COLOR]?",
    "meos_rocky_detect_reflection": "[ICON_SENSOR] reflected light intensity",
    "meos_rocky_detect_lightness": "[ICON_SENSOR] ambient light intensity",
    "meos_rocky_detect_ir_reflection": "[ICON_SENSOR] reflected infrared light intensity",
    "meos_show_play_sound": "play sound [SOUNDLIST]",
    "meos_show_play_sound_wait": "play sound [SOUNDLIST] until done",
    "meos_show_stop_allsound": "stop all sounds",
    "meos_show_play_note_with_string": "play note [SOUNDNOTE] for [SOUNDBEAT] beats",
    "meos_show_pause_note": "rest for [TIME] beats",
    "meos_show_play_hz": "play sound at frequency [HZ] HZ for a [TIME] secs",
    "meos_show_change_volume": "change volume by [VOLUME]",
    "meos_show_set_volume": "set volume to [VOLUME]",
    "meos_detect_sound_volume": "volume",
    "meos_comm_send_ir": "send IR message [STRING]",
    "meos_comm_receive_ir": "IR message received",
    "meos_when_board_launch": "when Codey starts up",
    "meos_when_button_press": "when button [BUTTONS] is pressed",
    "meos_when_board_shake": "when Codey is shaking",
    "meos_when_board_tilt": "when Codey is [DIRECTION]",
    "meos_when_volume_over": "when [MENU_LIST] > [SOUNDVOLUME]",
    "meos_when_brightness_less": "when light intensity < [BRIGHTNESS]",
    "meos_when_receive_message": "when I receive [BROADCAST_OPTION]",
    "meos_comm_send_message": "broadcast [BROADCAST_INPUT]",
    "meos_show_led_matrix_face": "show image [PANEL]",
    "meos_show_led_matrix_face_with_time": "show image [PANEL] for [TIME] secs",
    "meos_show_led_matrix": "show [STRING] until done",
    "meos_show_led_matrix_position": "light up x: [X] y: [Y]",
    "meos_light_off_led_matrix_position": "light off x: [X] y: [Y]",
    "meos_toggle_led_matrix_position": "switch between light-up and light-off x: [X] y: [Y]",
    "meos_event_led_matrix_position_is_light": "x: [X] y: [Y] is it lighted up?",
    "meos_show_led_matrix_face_position": "show image [PANEL] at the x:[AXIS-X] y:[AXIS-Y]",
    "meos_show_led": "[ICON_CODEY] RGB LED lights up [COLOR]",
    "meos_turn_off_led": "[ICON_CODEY] RGB LED lights off",
    "meos_show_led_red": "set RGB LED red [RED]",
    "meos_show_led_green": "set RGB LED green [GREEN]",
    "meos_show_led_blue": "set RGB LED blue [BLUE]",
    "meos_show_led_with_time": "[ICON_CODEY] RGB LED lights up [COLOR] for [TIME] secs",
    "meos_show_led_matrix_turn_off": "clear screen",
    "meos_event_button_pressed": "[ICON_CODEY] button [BUTTONS] is pressed?",
    "meos_event_is_shaked": "[ICON_CODEY] shaking?",
    "meos_event_is_tilt": "[ICON_CODEY] [DIRECTION] tilted?",
    "meos_detect_volume": "[ICON_CODEY] loudness",
    "meos_detect_lightness": "[ICON_CODEY] ambient light intensity",
    "meos_detect_battery_percentage": "%[ICON_CODEY] 1 battery level",
    "meos_detect_potentiometer": "[ICON_CODEY] gear potentiometer value",
    "meos_detect_gyro_angle": "[ICON_CODEY] [AXIS] angle(°)",
    "meos_detect_time": "[ICON_CODEY] timer",
    "meos_show_reset_time": "[ICON_CODEY] reset timer",
    "data_comm": "[COMM_VARIABLE]",
    "data_setcommvariableto": "set [COMM_VARIABLE] to [VALUE]",
    "data_changecommvariableby": "change [COMM_VARIABLE] by [VALUE]",
    "MOVE_FORWARD": "move forward",
    "MOVE_BACKWARD": "move backward",
    "MOVE_TURNLEFT": "turn left",
    "MOVE_TURNRIGHT": "turn right",
    "LAST": "last",
    "RANDOM": "random",
    "WHITE": "white",
    "PINK": "pink",
    "RED": "red",
    "ORANGE": "orange",
    "YELLOW": "yellow",
    "GREEN": "green",
    "CYAN": "cyan",
    "BLUE": "blue",
    "PURPLE": "purple",
    "BLACK": "black",
    "GOLD": "golden",
    "ROLL": "roll angle",
    "PITCH": "pitch angle",
    "YAW": "yaw angle",
    "roll": "roll angle",
    "pitch": "pitch angle",
    "yaw": "yaw angle",
    "LIGHT": "light up",
    "LIGHT_OFF": "light off",
    "BEAT_HALF": "half",
    "BEAT_QUATER": "quater",
    "BEAT_EIGHT": "1\/8",
    "BEAT_WHOLE": "whole beat",
    "BEAT_DOBULE": "double beat",
    "LEFT": "left-side",
    "RIGHT": "right-side",
    "CLOCKWISE": "clockwise",
    "ANTICLOCKWISE": "anticlockwise",
    "STOP": "stop",
    "TILT_FORWARD": "forward",
    "TILT_BACKWARD": "backward",
    "TILT_LEFT": "towards the left",
    "TILT_RIGHT": "towards the right",
    "codey_cat": "cat",
    "codey_dog": "dog",
    "codey_happy": "happy",
    "codey_cry": "cry",
    "codey_dispirited": "dispirited",
    "codey_angry": "angry",
    "codey_fear": "fear",
    "codey_sound_codey": "Codey",
    "codey_sound_hello": "hello",
    "codey_sound_hi": "hi",
    "codey_sound_bye": "bye",
    "codey_sound_yeah": "yeah",
    "codey_sound_wow": "wow",
    "codey_sound_laugh": "laugh",
    "codey_sound_hum": "hum",
    "codey_sound_sad": "sad",
    "codey_sound_sigh": "sigh",
    "codey_sound_annoyed": "annoyed",
    "codey_sound_angry": "angry",
    "codey_sound_surprised": "surprised",
    "codey_sound_yummy": "yummy",
    "codey_sound_curious": "curious",
    "codey_sound_embarrassed": "embarrassed",
    "codey_sound_ready": "ready",
    "codey_sound_sprint": "sprint",
    "codey_sound_sleepy": "sleepy",
    "codey_sound_meow": "meow",
    "codey_sound_start": "start",
    "codey_sound_switch": "switch",
    "codey_sound_beeps": "beeps",
    "codey_sound_buzzing": "buzzing",
    "codey_sound_exhaust": "exhaust",
    "codey_sound_explosion": "explosion",
    "codey_sound_gotcha": "gotcha",
    "codey_sound_hurt": "hurt",
    "codey_sound_jump": "jump",
    "codey_sound_laser": "laser",
    "codey_sound_up": "level-up",
    "codey_sound_energy": "low-energy",
    "codey_sound_clash": "metal-clash",
    "codey_sound_tone": "prompt-tone",
    "codey_sound_right": "right",
    "codey_sound_wrong": "wrong",
    "codey_sound_ring": "ring",
    "codey_sound_score": "score",
    "codey_sound_shot": "shot",
    "codey_sound_step_1": "step_1",
    "codey_sound_step_2": "step_2",
    "codey_sound_wake": "wake",
    "codey_sound_warning": "warning",
    "meos_show_led_matrix_string": "show letter[STRING]until done",
    "meos_show_led_matrix_string_position": "show letter[STRING] at x:[X] y:[Y]",
    "meos_show_led_matrix_number": "show number [NUMBER]",
    "meos_show_led_matrix_time": "show time [HOUR]:[MINUTE]",
    "meos_show_led_rgb": "[ICON_CODEY] set the indicator[RGB]with color value[VALUE]",
    "meos_rocky_show_led_color": "[ICON_SENSOR] set the light with color[COLORLIST]",
    "meos_rocky_turn_off_led_color": "[ICON_SENSOR] light-off",
    "meos_rocky_keep_absolute_run": "keep straight towards[DIRECTION]at power[POWER]% for[TIME]secs",
    "meos_event_direction": "[DIRECTION]？",
    "meos_detect_rotate_angle": "[ICON_CODEY]rotation angle around[AXIS]",
    "meos_reset_angle": "[ICON_CODEY]reset the [AXIS] angle",
    "meos_detect_shaked_strength": "[ICON_CODEY]acceleration m/s²",
    "meos_rocky_detect_grey": "[ICON_SENSOR]grey-scale value",
    "meos_rocky_detect_rgb": "[ICON_SENSOR] [RGB]color value detected",
    "meos_event_is_orientate_to": "[ICON_CODEY][ORIENTATE]?",
    "left_incline":"tilted to the left",
    "right_incline":"tilted to the right",
    "ear_up":"ears up",
    "ear_down":"ears down",
    "face_up": "face up",
    "face_down": "face down",
    "stand_desk": "stand on desk",
    "ORIGIN_RED": "red",
    "ORIGIN_GREEN": "green",
    "ORIGIN_BLUE": "blue",
    "setting": "setting",
    "meos_ir_remote_letter_press": "IR Remote [LETTER] pressed",
    "meos_ir_remote_arrow_press": "IR Remote [LETTER] pressed",
    "meos_ir_remote_number_press": "IR Remote [LETTER] pressed",
    "axisX": "x axis",
    "axisY": "y axis",
    "axisZ": "z axis",
    "display": "Display",
    "lighting": "Lighting",
    "speaker": "Speaker",
    "action": "Action",
    "sensor": "Sensor",
    "myBlocks": "My Blocks",
    "comm": "Infrared",
    "irRemote": "IR Remote",
    "axisAll": "all",
    "meos_sound": "loudness",
    "meos_timer": "timer"
},
"ext-i18n/codey-neuron/i18n": {
    "neuron": "Neuron",
    "codey_neuron_run_dcmotor_with_time": "DC Motor [ID] [SLOT] rotates at power [POWER] for [TIME] secs",
    "codey_neuron_run_dcmotor_with_speed": "DC Motor [ID] [SLOT] rotates at power [POWER]",
    "codey_neuron_run_dcmotors": "DC Motor [ID] slot1 rotates at power [POWER_LEFT] slot2 rotates at power [POWER_RIGHT]",
    "codey_neuron_run_servo": "servo [ID] [SLOT] rotates to [ANGLE] degrees",
    "codey_neuron_set_led_with_time": "RGB LED [ID] lights up [COLORLIST] for [TIME] secs",
    "codey_neuron_set_led": " RGB LED [ID] lights up[COLORLIST]",
    "codey_neuron_set_led_with_rgb": "set RGB LED [ID] red [R] green [G] blue [B]",
    "codey_neuron_turn_off_led": "RGB LED lights off",
    "codey_neuron_turn_off_single_led": "RGB LED lights off [ID]",
    "codey_neuron_set_ledstrip_mode": "LED Strip [ID] lights up [STRIP]",
    "codey_neuron_set_ledstrip_with_rgb": "set LED Strip [ID] set [POSITION] RGB LED red [R] green [G] blue [B]",
    "codey_neuron_set_ledstrip_with_color": "set LED Strip [ID] set [POSITION] RGB LED [COLORLIST]",
    "codey_neuron_turn_off_ledstrip": "LED Strip lights off",
    "codey_neuron_set_ledpanel_with_time": "LED panel [ID] shows image [PANEL] for [TIME] secs",
    "codey_neuron_set_ledpanel_face": "LED panel [ID] shows image [PANEL]",
    "codey_neuron_set_ledpanel_postion": "LED panel lights up [ID] at x: [X] y: [Y] with color [COLOR]",
    "codey_neuron_set_ledpanel_postion_rgb": "LED panel lights up[ID] at x: [X] y: [Y] with red [R] green [G] blue [B]",
    "codey_neuron_turn_off_ledpanel_postion": "LED panel lights off [ID] at x: [X] y: [Y]",
    "codey_neuron_turn_off_ledpanel": "LED panel lights off",
    "codey_neuron_turn_off_single_ledpanel": "LED panel lights off [ID]",
    "codey_neuron_display_emotion_with_time": "display [ID] shows animation [EMOTION] for [DURATION] secs",
    "codey_neuron_display_emotion": "display [ID] shows animation [EMOTION]",
    "codey_neuron_display_icon": "display [ID] shows icon [ICON_ID] text [STRING]",
    "codey_neuron_display_icon_with_pos": "display [ID] shows icon [ICON_ID_1] text [STRING_1] on the upper line and shows icon [ICON_ID_2] text [STRING_2] on the line below",
    "codey_neuron_light_on_el_wiredriver": "EL [ID] lights up at [SLOT]",
    "codey_neuron_light_off_el_wiredriver": "EL [ID] lights off at [SLOT]",
    "codey_neuron_play_tone": "buzzer [ID] plays note [TONE] for [BEAT] beats",
    "codey_neuron_play_hz": "buzzer [ID] plays at frequency of [HZ] for [TIME] secs",
    "codey_neuron_when_board_launch": "Neuron Program",
    "codey_neuron_event_button_pressed": "button [ID] is pressed?",
    "codey_neuron_detect_knob": "knob values at [ID]",
    "codey_neuron_detect_temperature": "temperature sensor [ID] degrees (℃)",
    "codey_neuron_event_linefollow": "dual IR detector [ID] [AXIS] triggered?",
    "codey_neuron_detect_lightness": "light sensor [ID] light intensity",
    "codey_neuron_event_touch_color": "touch switch[ID] [COLOR] is touched?",
    "codey_neuron_detect_volume": "sound sensor [ID] loudness",
    "codey_neuron_detect_ultrasonic": "ultrasonic sensor [ID] distance (cm)",
    "codey_neuron_event_tilt": "gyro sensor [ID] tilted [DIRECTION]?",
    "codey_neuron_event_shaked": "gyro sensor [ID] shaking?",
    "codey_neuron_event_tremor": "gyro sensor [ID] vibrating?",
    "codey_neuron_detect_gyro_angle": "gyro sensor [ID] [COORDINATE] angle",
    "codey_neuron_detect_gyro_speed": "gyro sensor [ID] [COORDINATE] acceleration m/s²",
    "codey_neuron_detect_color_sensor": "color sensor [ID] [COLOR] value",
    "codey_neuron_event_josystick_direction": "joystick [ID] [DIRECTION] shaking?",
    "codey_neuron_detect_joystick": "joystick [ID] [AXIS] axis value",
    "codey_neuron_event_pir": "pir sensor [ID] detects people?",
    "codey_neuron_detect_humidity": "soil moisture sensor [ID] humidity",
    "led_strip_mode_static": "static",
    "led_strip_mode_roll": "roll",
    "led_strip_mode_repeat": "repeat",
    "led_strip_mode_marquee": "marquee",
    "led_strip_mode_breathe": "breathing light",
    "led_strip_mode_gradient": "gradient",
    "forward": "forward",
    "backward": "backward",
    "left": "left",
    "right": "right",
    "red": "red",
    "green": "green",
    "blue": "blue",
    "yellow": "yellow",
    "x_axis": "x",
    "y_axis": "y",
    "order_left": "left",
    "order_right": "right",
    "order_none": "none",
    "order_all": "all",
    "slot1": "slot1",
    "slot2": "slot2",
    "slot3": "slot3",
    "slot4": "slot4",
    "light_on": "light-on",
    "light_off": "light-off",
    "normal": "normal",
    "drowsy": "drowsy",
    "sad": "sad",
    "happy": "happy",
    "enlarged": "goggle",
    "angry": "angry",
    "fixed": "stare",
    "mini": "squint",
    "air": "air",
    "checkmark": "check marks",
    "cloud": "cloud",
    "heart": "heart",
    "moon": "moon",
    "rain": "rain",
    "rotate": "circular ring",
    "ruler": "ruler",
    "running": "running",
    "smile": "smile",
    "snow": "snow",
    "sun": "sun",
    "temperature": "temperature",
    "water": "water drop",
    "none": "none",
    "roll": "roll angle",
    "pitch": "pitch angle",
    "looks": "looks",
    "motion": "motion",
    "sensing": "sensing",
    "sound": "sound",
    "codey_neuron_set_ledpanel_face_position": "LED panel[ID]shows image [PANEL] at x:[X] y:[Y]",
    "codey_neuron_set_ledpanel_text": "LED panel [ID]shows[TEXT]",
    "codey_neuron_set_ledpanel_position_color": "LED panel [ID] lights up at x:[X] y:[Y] with color [COLORLIST]",
    "codey_neuron_run_dcmotor_wheel": "DC motor [ID]slot1 rotates at power [POWER_LEFT]%，slot2 rotates at power [POWER_RIGHT]%",
    "codey_neuron_detect_humiture": "humiture sensor [ID] [HUMITURE] value",
    "codey_neuron_detect_time": "timer",
    "codey_neuron_reset_time": "reset timer",
    "extensionDescription": "Let your Codey work with Neuron to have more fun!",
    "humidity": "humidity",
    "orange": "orange",
    "cyan": "cyan",
    "purple": "purple",
    "codey_neuron_turn_off_ledpanel_position": "LED panel [ID] lights off at x:[X] y:[Y]"
},
"ext-i18n/cognitive/i18n": {
    "openWindow": "Open recognition window",
    "openMediaWindow": "Open recognition window",
    "beginSpeechToText": "recognize speech in [LANGUAGE] for [TIMER] seconds",
    "speechToTextResult": "speech recognition result",
    "beginFaceDetection": "recognize people's age in [TIMER] seconds",
    "faceDetectionReady": "Age recognition preparation",
    "faceDetectionResult": "age recognition result",
    "beginEmotionRecognition": "recognize emotion in [TIMER] seconds",
    "emotionRecognitionReady": "Emotion recognition preparation",
    "emotionValue": "[TYPE] value",
    "emotionType": "emotion is [TYPE] ?",
    "beginImageToText": "recognize printed [LANGUAGE] text in [TIMER] seconds",
    "imageToTextReady": "Text recognition preparation",
    "beginHandwrittenToText": "recognize handwritten English text in [TIMER] seconds",
    "imageToTextResult": "text recognition result",
    "emotion_happiness": "happiness",
    "emotion_neutral": "neutral",
    "emotion_surprise": "surprise",
    "emotion_sadness": "sadness",
    "emotion_anger": "anger",
    "emotion_contempt": "contempt",
    "emotion_disgust": "disgust",
    "emotion_fear": "fear",
    "happiness": "happiness",
    "neutral": "neutral",
    "surprise": "surprise",
    "sadness": "sadness",
    "anger": "anger",
    "contempt": "contempt",
    "disgust": "disgust",
    "fear": "fear",
    "lang_zh_CN": "Chinese",
    "lang_en_US": "English",
    "lang_fr_FR": "French",
    "lang_de_DE": "German",
    "lang_it_IT": "Italian",
    "lang_es_ES": "Spanish",
    "err_network": "Network exception, please check your network",
    "err_request_fail": "Call interface failed, please try again",
    "err_not_login": "You are not logged in, please login",
    "err_count_limit": "The current account has been called more than 200 times today",
    "AI": "AI",
    "extensionDescription": "The cognitive services API allows users to add other features, for instance, Video, Speech, Language and Knowledge."
},
"ext-i18n/common/media/i18n": {
  "COGNITIVE.WINDOW.TITLE": "Recognition Window",
  "COGNITIVE.WINDOW.OPENED": "The recognition window is open.",
  "COGNITIVE.WINDOW.NOOPENED": "No recognition window is open. Please open the window.",
  "COGNITIVE.VIDEO.NOTFOUND": "No camera can be detected.",
  "COGNITIVE.VIDEO.NOOPEN": "Your camera is not turned on.",
  "COGNITIVE.AUDIO.NOTFOUND": "No microphone can not be detected.",
  "COGNITIVE.AUDIO.NOOPEN": "Your microphone is not turned on.",
  "COGNITIVE.AUDIO.LOADING.TEXT": "Inputting via speech recognition..."
},
"ext-i18n/iot/i18n": {
  "IOT.CITYCODE.TITLE": "City",
  "IOT.CITYCODE.PH": "Enter city name to research",
  "IOT.WIRELESS.TITLE": "Wireless",
  "IOT.WIRELESS.PH": "Enter or select a wireless device",
  "IOT.WIRELESS.EMPTY": "No wireless devices were found.",
  "CLOUDLIST.LISTNAME.TITLE": "cloud list",
  "CLOUDLIST.LISTNAME.TAB.CREATE.TITLE": "Create a cloud list",
  "CLOUDLIST.LISTNAME.TAB.CHOOSE.TITLE": "Open a cloud list",
  "CLOUDLIST.LISTNAME.MSG.FORMAT": "The cloud list name must start with a letter and can include numbers and underlines.",
  "CLOUDLIST.LISTNAME.MSG.MAXLEN": "The cloud list name should include 20 strings at most.",
  "CLOUDLIST.LISTNAME.MSG.REQUIRE": "The cloud list can not be empty.",
  "CLOUDLIST.LISTNAME.MSG.SUCCESS": "A could list has been created.",
  "CLOUDLIST.LISTNAME.MSG.FAIL": "A cloud list failed to be created.",
  "CLOUDLIST.LISTNAME.PH": "Please enter the cloud list name",
  "CLOUDLIST.LISTNAME.LABEL": "Cloud List Name",
  "CLOUDLIST.MSG.EMPTY": "You have not created a cloud list yet.",
  "NETWORK.ERR.MSG": "Network error! Please try again later!",
  "BUTTON.OK.TEXT": "OK",
  "BUTTON.CANCEL.TEXT": "Cancel",
  "MSG.30008": "The could list has reached its limit in number.",
  "iot_connect_network": "connect to Wi-Fi [SSID] password [PASSWORD]",
  "iot_connect_network_ssid_value": "Wi-Fi hotspots not found",
  "iot_connect_network_password_value": "12345678",
  "iot_disconnect_network": "disconnect the network connection",
  "iot_if_connect_network": "Wi-Fi connected?",
  "iot_weather": "[WEATHER_TYPE] in [LOCATION]",
  "iot_air": "air quality [WEATHER_TYPE] at [LOCATION]",
  "please_select_the_index": "select an air quality index",
  "iot_sun": "[WEATHER_TYPE] [TIME] at [LOCATION]",
  "sunrise": "sunrise",
  "sunset": "sunset",
  "time": "time",
  "hour": "hour",
  "minute": "minute",
  "iot_location_value": "location",
  "iot_weathertype_value": "weather type",
  "max_temperature_c": "maximum temperature ℃",
  "min_temperature_c": "minimum temperature ℃",
  "max_temperature_f": "maximum temperature ℉",
  "min_temperature_f": "minimum temperature ℉",
  "weather": "weather",
  "humidity": "humidity",
  "data_addtolist_cloudlist": "add [VALUE] to [ICON] [CLOUD_VARIABLE]",
  "data_itemoflist_cloudlist": "item [VALUE] of [ICON] [CLOUD_VARIABLE]",
  "data_lengthoflist_cloudlist": "length of [ICON] [CLOUD_VARIABLE]",
  "field_add_cloud_data": "add cloud list",
  "field_option_last": "last",
  "field_option_random": "random",
  "ifttt_pub": "add [MESSAGE] to IFTTT receive data [TRIGGER]",
  "ifttt_trigger1": "command1",
  "ifttt_trigger2": "command2",
  "ifttt_trigger3": "command3",
  "ifttt_trigger4": "command4",
  "ifttt_trigger5": "command5",
  "ifttt_trigger6": "command6",
  "ifttt_recv": "when received message from IFTTT [MESSAGE]",
  "ifttt_msg1": "message1",
  "ifttt_msg2": "message2",
  "ifttt_msg3": "message3",
  "ifttt_msg4": "message4",
  "ifttt_msg5": "message5",
  "ifttt_msg6": "message6",
  "mqtt_pub": "publish remote instruction [PUBLISHER]",
  "mqtt_recv": "when received remote instruction [RECEIVER]",
  "extensionDescription": "Bring Cody into IoT to make it achieve more fun things."
},
"ext-i18n/ir-remote/i18n": {
    "meos_ir_remote_letter_press": "IR Remote [LETTER] pressed",
    "meos_ir_remote_arrow_press": "IR Remote [LETTER] pressed",
    "meos_ir_remote_number_press": "IR Remote [LETTER] pressed",
    "setting": "setting",
    "irRemote": "IrRemote",
    "extensionDescription": "Personalize an IR remote controller to control your Codey Rocky"
},
"ext-i18n/mcore/i18n": {
    "mcore_forward_time": " move forward at power [POWER] %，for [TIME] secs",
    "mcore_backward_time": "move backward at power[POWER] %，for [TIME] secs",
    "mcore_turnleft_time": "turn left at power[POWER] %，for [TIME] secs",
    "mcore_turnright_time": "turn right at power[POWER] % for [TIME] secs",
    "mcore_move": "[MOVE_DIRECTION] at power[POWER] %",
    "mcore_move_wheel_speed": "left wheel at power[POWER_LEFT] %，right wheel at power[POWER_RIGHT] %",
    "mcore_move_stop": "stop moving",
    "mcore_run_motor": "DC motor[PORT] [ROTATE] rotates at power[POWER] %",
    "mcore_run_servo": "servo[PORT] [SLOT] positioned at [DEGREE] angle",
    "mcore_run_fan": "fan [PORT] [FAN_ROTATE] rotates",
    "mcore_run_shutter": "shutter [PORT] [SHUTTER_ACTION]",
    "mcore_show_led_time": "LED [LED_POSTION] shows color [COLOR]，for [TIME] secs",
    "mcore_show_led": "LED[LED_POSTION] shows color [COLOR]",
    "mcore_show_led_rgb": "turn on [LED_POSTION] light with color red[R] green [G] blue [B]",
    "mcore_sound_play_note": "play note[NOTE] for [BEAT] beats",
    "mcore_sound_play_hz": "play sound at frequency of [HZ] Hz for[TIME] secs",
    "mcore_show_face_time": "LED panel [PORT] shows image [FACE_PANEL] for [TIME] secs",
    "mcore_show_face": "LED panel [PORT] shows image[FACE_PANEL]",
    "mcore_show_face_position": "LED panel [PORT] shows image [FACE_PANEL] at x: [X] y: [Y]",
    "mcore_show_text": "LED panel [PORT] shows text [TEXT] ",
    "mcore_show_text_position": "LED panel [PORT] shows text [TEXT] at x: [X] y: [Y]",
    "mcore_show_number": "LED panel  [PORT] shows number [NUMBER]",
    "mcore_show_time": "LED panel [PORT] shows time [NUMBER1]：[NUMBER2]",
    "mcore_show_face_off": "LED panel [PORT] clears screen",
    "mcore_show_face_point": "LED panel [PORT] lights up at x: [X] y: [Y]",
    "mcore_show_face_off_point": "LED panel [PORT] lights off at x: [X] y: [Y]",
    "mcore_show_face_toogle_point": "LED panel [PORT] lights on and off at x: [X] y: [Y]",
    "mcore_event_face_on_point": "LED panel [PORT] at x: [X] y: [Y] lighted up？",
    "mcore_show_external_led_time": "RGB LED [PORT] all light up[LED_POSTION] light with color [COLOR] for [TIME] secs",
    "mcore_show_external_led": "RGB LED [PORT] all light up[LED_POSTION] light with color [COLOR]",
    "mcore_show_external_led_rgb": "RGB LED [PORT] all light up[LED_POSTION] light with color red [R] green [G] blue [B]",
    "mcore_show_ledstrip_effect": "LED strip [PORT] [SLOT] lights up[LED_STRIP] with the effect [LED_MODE]",
    "mcore_show_all_ledstrip_color": "LED strip[PORT] [SLOT] light all with color [COLOR_LIST]",
    "mcore_show_ledstrip_color": "LED strip[PORT] [SLOT] [POS] light with color [COLOR_LIST]",
    "mcore_show_ledstrip_rbg": "LED strip[PORT] [SLOT] [POS] light with color red [R] green [G] blue [B]",
    "mcore_show_7segments_number": "set 7-segments display [PORT] number [NUMBER]",
    "mcore_event_obstacle": "obstacles ahead?",
    "mcore_detect_light": "light intensity",
    "mcore_detect_loudness": "loudness",
    "mcore_event_linefollower": "black line detected？",
    "mcore_detect_external_ultrasonic": "ultrasonic sensor [PORT] distance",
    "mcore_detect_external_light": "light sensor [PORT] light intensity",
    "mcore_detect_external_loudness": "sound sensor[PORT] volume",
    "mcore_detect_external_linefollower": "line follower sensor [PORT] displays value",
    "mcore_event_external_linefollower": "line follower sensor [PORT] detects [LINEFOLLOW_STATE] being [BLACK_WHITE] ？",
    "mcore_detec_temperature": "temperature sensor [PORT] [SLOT] Celsius （℃）",
    "mcore_detect_humiture": "humiture sensor[PORT] [TEMP_HUMITURE]",
    "mcore_event_touch": "touch sensor [PORT] is touched？",
    "mcore_detect_compass": "electronic compass [PORT] towards the north",
    "mcore_event_flame": "flame sensor[PORT]detects flame？",
    "mcore_detect_flame": "flame sensor[PORT] displays value",
    "mcore_event_special_gas": "gas sensor[PORT] detects special gas？",
    "mcore_detect_gas": "gas sensor [PORT] displays value",
    "mcore_detect_gyro_angle": "gyroscope [AXIS] angle",
    "mcore_event_pir_motion": "PIR sensor [PORT] detects human's motion？",
    "mcore_event_button_press": "button [PORT] [FOUR_KEY] pressed？",
    "mcore_event_limit_switch": "limit switch [PORT] [SLOT] pressed？",
    "mcore_detect_potentiometer": "potentiometer [PORT] displays value",
    "mcore_detect_joystick": "joystick [PORT] [AXIS_X_Y] displays value",
    "mcore_detect_infrared": "IR receiver [PORT] ",
    "mcore_event_ir_remote": "IR remote[REMOTE_KEY] pressed？",
    "mcore_detect_timer": "timer",
    "mcore_reset_timer": "reset timer",
    "mcore_when_board_launch": "when mBot(mcore) starts up",
    "mcore_when_receive_message": "when receiving [BROADCAST_OPTION]",
    "mcore_comm_send_message": "broadast [BROADCAST_INPUT]",
    "mcore_when_button": "when on-board button [IS_PRESS]",
    "action": "Action",
    "show": "Show",
    "sensor": "Sensor",
    "mcore_event_board_button_pressed": "when on-board button [OPTION]?",
    "mcore_detect_obstacle_distance": "distance of obstacles ahead",
    "mcore_send_ir": "send IR message[MESSAGE]",
    "mcore_detect_ir": "received IR message",
    "menu_led_position_all": "all",
    "menu_led_position_left": "left",
    "menu_led_position_right": "right",
    "menu_shutter_press": "pressed",
    "menu_shutter_release": "release",
    "menu_shutter_focusing": "focusing",
    "menu_shutter_stop_focusing": "stop focusing",
    "menu_clockwise": "clockwise",
    "menu_anti_clockwise": "anti clockwise",
    "menu_rotate_stop": "stop",
    "menu_beat_half": "half",
    "menu_beat_quarter": "quarter",
    "menu_beat_eighth": "eighth",
    "menu_beat_whole": "whole",
    "menu_beat_double": "double",
    "menu_beat_zero": "stop",
    "menu_move_forward": "forward",
    "menu_move_backward": "backward",
    "menu_move_left": "turn left",
    "menu_move_right": "turn right",
    "menu_left": "left",
    "menu_right": "right",
    "menu_both": "both",
    "menu_none": "none",
    "menu_black": "black",
    "menu_white": "white",
    "menu_slot1": "slot1",
    "menu_slot2": "slot2",
    "menu_port1": "port1",
    "menu_port2": "port2",
    "menu_port3": "port3",
    "menu_port4": "port4",
    "menu_port5": "port5",
    "menu_port6": "port6",
    "menu_port7": "port7",
    "menu_port8": "port8",
    "menu_port9": "port9",
    "menu_port10": "port10",
    "menu_humiture": "humidity",
    "menu_temperature": "temperature",
    "menu_axis_x": "x axis",
    "menu_axis_y": "y axis",
    "menu_axis_z": "z axis",
    "menu_key1": "key 1",
    "menu_key2": "key 2",
    "menu_key3": "key 3",
    "menu_key4": "key 4",
    "menu_remote_up": "up",
    "menu_remote_down": "down",
    "menu_remote_left": "left",
    "menu_remote_right": "right",
    "menu_remote_setting": "setting",
    "menu_remote_normal": "normal",
    "menu_remote_marquee": "marquee",
    "menu_remote_breathe": "breathe",
    "menu_color_red": "red",
    "menu_color_orange": "orange",
    "menu_color_yellow": "yellow",
    "menu_color_green": "green",
    "menu_color_cyan": "cyan",
    "menu_color_blue": "blue",
    "menu_color_purple": "purple",
    "menu_motor_port1": "motor port1",
    "menu_motor_port2": "motor port2",
    "menu_on_board": "on board",
    "menu_press": "pressed",
    "menu_release": "released",
    "mcore": "mBot"
},
"ext-i18n/microbit/i18n": {
    "microbit_show_led_matrix_happy": "show font [PANEL]",
    "microbit_show_led_matrix_happy_with_time": "show font [PANEL] [TIME] secs",
    "microbit_show_led_matrix": "show [STRING]",
    "microbit_toggle_led_matrix_position": "[STATUS] on the x:[X] axis, y:[Y] axis",
    "microbit_show_led_matrix_turn_off": "hide all matrixs",
    "microbit_show_led_matrix_light_position": "show on the x:[X] axis, y:[Y] axis brightness [LIGHTNESS]",
    "led_show": "show",
    "led_hide": "hide",
    "microbit_show_play_sound": "pin [PIN], play sound [SOUND]",
    "microbit_show_play_sound_wait": "pin [PIN] play sound [SOUND] until down",
    "microbit_show_stop_allsound": "stop all sounds",
    "microbit_show_play_note_with_string": "pin [PIN] play note [NOTE] for a [BEAT] beat",
    "microbit_show_change_tempo": "change tempo by (bpm) [TEMPO]",
    "microbit_show_set_tempo": "set tempo by (bpm) [TEMPO]",
    "microbit_detect_tempo_volume": "tempo (bpm)",
    "microbit_when_button_press": "when button [BUTTON] pressed",
    "microbit_when_pin_connect": "when pin [PIN] connected",
    "microbit_when_gesture": "when [GESTURE]",
    "microbit_event_button_pressed": "[BUTTON] button is pressed？",
    "microbit_event_pin_connected": "pin [PIN] is connected？",
    "microbit_event_gesture": "is [GESTURE] ?",
    "microbit_detect_compass": "compass",
    "microbit_detect_temperature": "temperature",
    "microbit_detect_light": "light level",
    "microbit_detect_time": "timer",
    "microbit_show_reset_time": "reset timer",
    "microbit_control_wait": "wait [DURATION] secs",
    "gesture_up": "up",
    "gesture_down": "down",
    "gesture_left": "left",
    "gesture_right": "right",
    "gesture_face_up": "face up",
    "gesture_face_down": "face down",
    "gesture_freefall": "freefall",
    "gesture_3g": "3g",
    "gesture_6g": "6g",
    "gesture_8g": "8g",
    "gesture_shake": "shake"
},
"ext-i18n/neuron/i18n": {
    "neuron": "Neuron",
    "neuron_run_dcmotor_with_time": "DC Motor [ID] [SLOT] rotates at power [POWER] for [TIME] secs",
    "neuron_run_dcmotor_with_speed": "DC Motor [ID] [SLOT] rotates at power [POWER]",
    "neuron_run_dcmotors": "DC Motor [ID] slot1 rotates at power [POWER_LEFT] slot2 rotates at power [POWER_RIGHT]",
    "neuron_run_servo": "servo [ID] [SLOT] rotates to [ANGLE] degrees",
    "neuron_set_led_with_time": "RGB LED [ID] lights up [COLOR] for [TIME] secs",
    "neuron_set_led": " RGB LED [ID] lights up[COLOR]",
    "neuron_set_led_with_rgb": "set RGB LED [ID] red [R] green [G] blue [B]",
    "neuron_turn_off_led": "RGB LED lights off",
    "neuron_set_ledstrip_mode": "LED Strip [ID] lights up [STRIP]",
    "neuron_set_ledstrip_with_rgb": "set LED Strip [ID] set [POSITION] RGB LED red [R] green [G] blue [B]",
    "neuron_set_ledstrip_with_color": "set LED Strip [ID] set [POSITION] RGB LED [COLOR]",
    "neuron_turn_off_ledstrip": "LED Strip lights off",
    "neuron_set_ledpanel_with_time": "LED panel [ID] shows image [PANEL] for [TIME] secs",
    "neuron_set_ledpanel_face": "LED panel [ID] shows image [PANEL]",
    "neuron_set_ledpanel_postion": "LED panel lights up [ID] at x: [X] y: [Y] with color [COLOR]",
    "neuron_set_ledpanel_postion_rgb": "LED panel lights up[ID] at x: [X] y: [Y] with red [R] green [G] blue [B]",
    "neuron_turn_off_ledpanel_postion": "LED panel lights off [ID] at x: [X] y: [Y]",
    "neuron_turn_off_ledpanel": "LED panel lights off",
    "neuron_display_emotion_with_time": "display [ID] shows animation [EMOTION] for [DURATION] secs",
    "neuron_display_emotion": "display [ID] shows animation [EMOTION]",
    "neuron_display_icon": "display [ID] shows icon [ICON_ID] text [STRING]",
    "neuron_display_icon_with_pos": "display [ID] shows icon [ICON_ID_1] text [STRING_1] on the upper line and shows icon [ICON_ID_2] text [STRING_2] on the line below",
    "neuron_light_on_el_wiredriver": "EL [ID] lights up at [SLOT]",
    "neuron_light_off_el_wiredriver": "EL [ID] lights off at [SLOT]",
    "neuron_play_tone": "buzzer [ID] plays note [TONE] for [BEAT] beats",
    "neuron_play_hz": "buzzer [ID] plays at frequency of [HZ] for [TIME] secs",
    "neuron_when_board_launch": "Neuron Program",
    "neuron_event_button_pressed": "button [ID] is pressed?",
    "neuron_detect_knob": "knob values at [ID]",
    "neuron_detect_temperature": "temperature sensor [ID] degrees (℃)",
    "neuron_event_linefollow": "dual IR detector [ID] [AXIS] triggered?",
    "neuron_detect_lightness": "light sensor [ID] light intensity",
    "neuron_event_touch_color": "touch switch[ID] [COLOR] is touched?",
    "neuron_detect_volume": "sound sensor [ID] loudness",
    "neuron_detect_ultrasonic": "ultrasonic sensor [ID] distance (cm)",
    "neuron_event_tilt": "gyro sensor [ID] tilted [DIRECTION]?",
    "neuron_event_shaked": "gyro sensor [ID] shaking?",
    "neuron_event_tremor": "gyro sensor [ID] vibrating?",
    "neuron_detect_gyro_angle": "gyro sensor [ID] [COORDINATE] angle",
    "neuron_detect_gyro_speed": "gyro sensor [ID] [COORDINATE] acceleration m/s²",
    "neuron_detect_color_sensor": "color sensor [ID] [COLOR] value",
    "neuron_event_josystick_direction": "joystick [ID] [DIRECTION] shaking?",
    "neuron_detect_joystick": "joystick [ID] [AXIS] axis value",
    "neuron_event_pir": "pir sensor [ID] detects people?",
    "neuron_detect_humidity": "soil moisture sensor [ID] humidity",
    "led_strip_mode_static": "static",
    "led_strip_mode_roll": "roll",
    "led_strip_mode_repeat": "repeat",
    "led_strip_mode_marquee": "marquee",
    "led_strip_mode_breathe": "breathing light",
    "led_strip_mode_gradient": "gradient",
    "forward": "forward",
    "backward": "backward",
    "left": "left",
    "right": "right",
    "red": "red",
    "green": "green",
    "blue": "blue",
    "yellow": "yellow",
    "x_axis": "x",
    "y_axis": "y",
    "order_left": "left",
    "order_right": "right",
    "order_none": "none",
    "order_all": "all",
    "slot1": "slot1",
    "slot2": "slot2",
    "slot3": "slot3",
    "slot4": "slot4",
    "light_on": "light-on",
    "light_off": "light-off",
    "normal": "normal",
    "drowsy": "drowsy",
    "sad": "sad",
    "happy": "happy",
    "enlarged": "goggle",
    "angry": "angry",
    "fixed": "stare",
    "mini": "squint",
    "air": "air",
    "checkmark": "check marks",
    "cloud": "cloud",
    "heart": "heart",
    "moon": "moon",
    "rain": "rain",
    "rotate": "circular ring",
    "ruler": "ruler",
    "running": "running",
    "smile": "smile",
    "snow": "snow",
    "sun": "sun",
    "temperature": "thermometer",
    "water": "water drop",
    "none": "none",
    "roll": "roll angle",
    "pitch": "pitch angle",
    "looks": "looks",
    "motion": "motion",
    "sensing": "sensing",
    "sound": "sound"
},
"ext-i18n/tm/i18n": {
  "MODEL.TITLE": "Model Training",
  "MODEL.NEW": "Build a new model",
  "MODEL.NEW.CONFIRM": "If you build a new model, the current training data will be cleared! Are you sure you want to build a new model?",
  "MODEL.USE": "Use the model",
  "MODEL.USE.TIP": "The model can be used only after all the categories are trained.",
  "MODEL.NO.CAMERA": "No camera can be detected.",
  "MODEL.LOADING": "Model Resource Loading...",
  "MODEL.OUTPUT.TITLE": "Result",
  "MODEL.CAGEGORY.PREFIX": "Category",
  "MODEL.CAGEGORY.COUNT": "Number of Model Categories",
  "MODEL.CAGEGORY.COUNT.PH": "Please enter the number of model categories",
  "MODEL.CAGEGORY.EMPTY": "The Number of Model Categories can not be empty",
  "MODEL.CAGEGORY.LIMIT": "The Number of Model Categories should fall in the range of 3-30",
  "MODEL.SAMPLE.TEXT": "Samples",
  "BUTTON.LEARN.TEXT": "Learn",
  "BUTTON.LEARNING.TEXT": "Learning...",
  "BUTTON.RESET.TEXT": "Reset",
  "BUTTON.RESET.CONFIRM": "Are you sure you want to clear the current category sample?",
  "BUTTON.OK.TEXT": "OK",
  "BUTTON.CANCEL.TEXT": "Cancel",
  "BUTTON.YES.TEXT": "Yes",
  "BUTTON.NO.TEXT": "No",
  "BUTTON.REFRESH.TEXT": "Refresh",
  "COGNITIVE.VIDEO.NOTFOUND": "No camera can be detected.",
  "DL": "TM",
  "training_model": "Training model",
  "open_media_window_tm": "Open recognition window",
  "options_category_name": "Category",
  "visual_recognition_result": "recognition result",
  "visual_recognition_confidence": "confidence of [sample_index]",
  "visual_recognition_result_is": "recognition result is [sample_index] ?",
  "extensionDescription": "With Machine Learning, you don’t have to program but still can train computers to learn things and establish artificial neural networks that resemble human’s brains."
},
"mblock5-i18n/agreement": {},
"mblock5-i18n/calibrate": {
  "CALIBRATE.COLOR.TITLE": "Calibrate the color sensor of Codey Rocky",
  "CALIBRATE.COLOR.DESCRIPTION": [
    "Put your Codey Rocky in the environment that needs calibration (working environment), and rotate the IR color sensor to the bottom.",
    "Place the white color identification card under the color sensor (if your color card is damaged or lost, use a white printer paper then).",
    "Just click the Calibrate button below. Calibration finished!",
    "Please aim the color sensor to the center of the Color Identification Card."
  ],
  "CALIBRATE.GYRO.TITLE": "Calibrate the gyro of Codey",
  "CALIBRATE.GYRO.DESCRIPTION": [
    "Put your Codey in a stable place.",
    "Just click the Calibrate button below.Calibration finished!"
  ],
  "CALIBRATE.BUTTON.TEXT": "Calibrate",
  "CALIBRATE.BUTTON.TEXT.LOADING": "Calibrating...",
  "CALIBRATE.MSG.SUCCESS": "Calibration success",
  "CALIBRATE.MSG.FAIL": "Calibration failed, please try again."
},
"mblock5-i18n/connect": {
  "CONNECT.TITLE": "Connect Device",
  "CONNECT.ONLY.TIP": "Only one device can be connected at a time in this version. A new device connection will lead to the disconnection of the existing one.",
  "CONNECT.SERIAL": "USB",
  "CONNECT.HID": "2.4G",
  "CONNECT.HID.DESCRIPTION": "1. Install the 2.4G module on the robot <br> 2. Power on the robot <br> 3. Press the button at the top of the 2.4G module <br> 4. Connect the 2.4 G module to your computer",
  "CONNECT.BLE": "Bluetooth",
  "CONNECT.WIFI": "Wifi",
  "CONNECT.BUTTON.TEXT": "Connection",
  "CONNECT.CHOOSE.SERIAL": "Please select a COM port.",
  "CONNECT.CHOOSE.BLE": "Please select a Bluetooth device to connect",
  "CONNECT.LIST.EMPTY": "No device can be detected to connect.",
  "CONNECT.STATUS.CONNECTED": "The device has been connected.",
  "CONNECT.STATUS.DISCONNECTED": "The device has been disconnected.",
  "CONNECT.MESSAGE.SUCCESS": "Connected!",
  "CONNECT.MESSAGE.FAIL": "Connection error. Please try to connect again.",
  "CONNECT.HELPLINK.TEXT": "Failed to connect? Go to FAQ for help.",
  "CONNECT.UNABLE.TITLE": "Unidentified device",
  "CONNECT.UNABLE.TEXT": "The device you connected may be not {0}, or the firmware of {0} has been damaged.\n\n\tYou can: \n\t- Change another COM port.\n\t- Update the device firmware\n\nIf you are using a Bluetooth adapter, please check if the adapter is well connected to the device.",
  "CONNECT.LEARN.MORE.TEXT": "Learn More",
  "CONNECT.CONNECTED": "connected"
},
"mblock5-i18n": {
  "MBLOCK": "mBlock",
  "MBLOCK.TEXT": "Sign up/Sign in mBlock",
  "MENU.FILE": "File",
  "MENU.FILE.NEW": "New Project",
  "MENU.FILE.OPEN": "Open from your computer",
  "MENU.FILE.SAVE": "Save",
  "MENU.FILE.SAVEAS": "Save As...",
  "MENU.FILE.DEMOS": "Example Programs",
  "MENU.PROJECTS": "My Projects",
  "MENU.EDIT": "Edit",
  "MENU.EDIT.UNDO": "Undo",
  "MENU.EDIT.REDO": "Redo",
  "MENU.HELP": "Help",
  "MENU.HELP.ABOUT": "About mBlock",
  "MENU.HELP.FEEDBACK": "Feedbacks",
  "MENU.HELP.UPDATER.CHECKER": "Check For Updates",
  "MENU.FIRMWARE": "Upload Firmware",
  "MENU.LANGUAGE": "Language",
  "MENU.EXIT": "Exit",
  "MENU.MODE.BLOCK": "Blocks",
  "MENU.MODE.CODE": "Codes",
  "MENU.TOOL": "Tools",
  "MENU.CLOUDLIST": "Cloud Data",
  "MENU.HELP.UPDATEFIRMWARE": "Device Firmware Updates",
  "MENU.HELP.GUIDE": "Beginner's Guide",
  "IFTTT.TITLE": "IFTTT",
  "IFTTT.CONTENT.TEXT": "Go to IFTTT Configure Service",
  "IFTTT.CONTENT.TEXT.BEFORE": "Go to",
  "IFTTT.CONTENT.TEXT.AFTER": "Configure Service",
  "BUTTON.UPGRADE.NOW.TEXT": "Upgrade now",
  "BUTTON.UPGRADE.LATER.TEXT": "Upgrade later",
  "BUTTON.UPGRADE.SKIP.TEXT": "Skip this version",
  "BUTTON.RESTART.NOW.TEXT": "Restart now",
  "BUTTON.RESTART.LATER.TEXT": "Restart later",
  "BUTTON.FIRMWARE.NOW.TEXT": "Update now",
  "BUTTON.FIRMWARE.LATER.TEXT": "Update later",
  "BUTTON.GOTO.TEXT": "Go to",
  "BUTTON.IKNOW.TEXT": "OK",
  "BUTTON.GO.DOWNLOAD.TEXT": "For download",
  "BUTTON.UPDATE.TEXT": "Updates",
  "BUTTON.RETRY.TEXT": "Retry",
  "BUTTON.OK.TEXT": "OK",
  "BUTTON.CANCEL.TEXT": "Cancel",
  "BUTTON.NEXT.TEXT": "Next",
  "BUTTON.BACK.TEXT": "Back",
  "BUTTON.FINISH.TEXT": "Finish",
  "BUTTON.SUBMIT.TEXT": "Submit",
  "BUTTON.CLOSE.TEXT": "Close",
  "BUTTON.YES.TEXT": "Yes",
  "BUTTON.NO.TEXT": "No",
  "BUTTON.YES.SAVE.TEXT": "Save",
  "BUTTON.NO.SAVE.TEXT": "Don't Save",
  "BUTTON.UPLOAD.TEXT": "Upload",
  "BUTTON.CONTINUE.CONNECT.TEXT": "Connect",
  "BUTTON.UPDATE.SERIAL.TEXT": "Change a new COM",
  "BUTTON.UPDATE.FIRMWARE.TEXT": "Update Firmware",
  "BUTTON.REGISTER.LOGIN": "Sign up/Sign in",
  "BUTTON.DELETE": "Delete",
  "BUTTON.LOGOUT": "Sign out",
  "BUTTON.SHARE": "Share",
  "BUTTON.CANCEL.SHARE": "Yes",
  "BUTTON.SHARE.CHECK": "Go to the detail page",
  "BUTTON.SHARE.THINK": "Let me think",
  "SCANING.SERIAL": "Scanning for a COM port...",
  "SCANING.BLE": "Scanning for the Bluetooth...",
  "NOTSERVER.TEXT": "The device driver is not enabled.",
  "NOTSERVER.SOLUTION.TEXT": "Solutions",
  "DOWNLOAD.NOW": "Download Now",
  "UPLOAD.CODE.TITLE": "Upload Progress",
  "UPLOAD.COMPLIE.TITLE": "Compiling",
  "UPLOAD.COMPLIE.FAILED": "Compie failed",
  "UPLOAD.FIRMWARE.TITLE": "Upload Firmware",
  "UPLOAD.FIRMWARE.SELECT.TITLE": "Click here to select the firmware for upload",
  "UPLOAD.MESSAGE.SUCCESS": "The code has been uploaded.",
  "UPLOAD.MESSAGE.FAIL": "Code upload failed. Please try again!",
  "UPLOAD.MESSAGE.SUCCESS.FIRMAWARE": "The firmware update is finished. Please reconnect the device.",
  "UPLOAD.MESSAGE.FAIL.FIRMAWARE": "The firmware upload failed. You can try to upload again.",
  "UPLOAD.DISCONNECT.MESSAGE": "The device has been disconnected. Upload failed!",
  "CHOOSE.DEVICE.LABEL": "Select a device",
  "CHOOSE.FIRMWARE.LABEL": "Select firmware",
  "CHOOSE.FIRMWARE.LOCAL": "Choose a local firmware",
  "CHOOSE.FIRMWARE.MSG": "Please select a firmware",
  "VERSION.TEXT": "Version:",
  "FILENAME.EMPTY": "Untitled",
  "CONFIRM.SAVE.TITLE": "Save",
  "CONFIRM.SAVE.TEXT": "The file has been modified. Save it?",
  "EXPORT.SUCCESS.MSG": "The file has been saved.",
  "EXPORT.FAIL.MSG": "Failed to save the file\n",
  "IMPORT.FORMAT.ERROR.MSG": "File in wrong format",
  "IMPORT.CONTENT.ERROR.MSG": "Data check failure",
  "IMPORT.SUCCESS.MSG": "The file has been opened.",
  "IMPORT.FAIL.MSG": "Failed to open the file.",
  "DRAG.HOLDER.TEXT": "Drag the file and drop here.",
  "USER.INTERNATIONAL": "Switch to mBlock 5 International",
  "USER.DOMESTICAL": "Switch to mBlock 5 China",
  "USER.OVERAGE": "Are you 16 or older?",
  "USER.AGREEMENT": "Privacy Policy",
  "USER.AGREE.TEXT": "Agree and continue",
  "USER.GUARDIAN": "Guardian Consent",
  "USER.GUARDIAN.TEXT": "Considering that you are under the age of 16, you need to inform your parents or other guardians.This is important because it's about your privacy.",
  "USER.GUARDIAN.CONFIRM.TEXT": "I am his/her guardian",
  "USER.EMAIL.LOGIN": "Sign in for E-mail",
  "USER.STUDENTID.LOGIN": "Sign in for Student account",
  "USER.LOGIN.SUCCESS.MSG": "You have signed in!",
  "USER.LOGIN.FAIL.MSG": "Failed to Sign in!",
  "USER.REGISTER": "Sign up via e-mail",
  "USER.REGISTER.SUCCESS.MSG": "You have signed up!",
  "USER.REGISTER.FAIL.MSG": "Failed to sign up!",
  "USER.LOGOUT": "Sign out",
  "USER.LOGOUT.SUCCESS.MSG": "You have signed out!",
  "USER.LOGOUT.FAIL.MSG": "Failed to sign out.",
  "USER.PROFILE": "Account Settings",
  "USER.DELETE": "Delete Your Account",
  "USER.DELETE.ACCOUNT": "Your account ",
  "USER.DELETE.TEXT": " will be deleted. If you delete the account, the account can't be restored and the data will be removed, still proceed to delete?",
  "USER.DELETE.THINK": "Think again",
  "USER.DELETE.FAIL.MSG": "Failed to delete the account!",
  "USER.FORGET.PASSWORD": "Find your password",
  "USER.RESET.PASSWORD": "Reset your password",
  "USER.FINDPWD.SUCCESS.MSG": "You have reset the password.",
  "USER.FINDPWD.FAIL.MSG": "Failed to reset the password!",
  "SOCIAL.LOGIN": "Sign in using a third-party account",
  "OTHER.LOGIN": "Or continue with",
  "FORGET.PASSWORD": "Forgot Your Password?",
  "UPDATE.PASSWORD": "Update Password",
  "UPDATE.PASSWORD.CURRENT": "Current password",
  "UPDATE.PASSWORD.NEW": "New password",
  "USER.UPDATE.SUCCESS.MSG": "Password updated successfully!",
  "USER.UPDATE.FAIL.MSG": "Failed to update password!",
  "REGISTER.AGREE": "You sign up to agree the User Agreement",
  "PROTOCOL.TEXT": "User Agreement",
  "NO.CODE": "No verification code received?",
  "FORM.BUTTON.CODE.TEXT": "verification code",
  "FORM.BUTTON.CODE.SENDED": "Resend after {0}s",
  "FORM.BUTTON.CODE.SEND.SUCCESS.MSG": "The verification code has been sent to your email.",
  "FORM.BUTTON.CODE.SEND.FAIL.MSG": "Failed to send the verification code. Please try again later!",
  "FORM.BUTTON.CODE.SEND.AGAIN": "Send again",
  "FORM.FIELD.NICKNAME.PH": "Nickname",
  "FORM.FIELD.EMAIL": "Email",
  "FORM.FIELD.EMAIL.PH": "Email/Student account",
  "FORM.FIELD.EMAIL.TYPE.MSG": "Please enter a valid email address or Student account",
  "FORM.FIELD.EMAIL.ONLY.TYPE.MSG": "Please enter a valid email address",
  "FORM.FIELD.EMAIL.MSG": "Please enter your email address or Student account",
  "FORM.FIELD.EMAIL.USED.MSG": "The email address is already registered. Please return to Sign up again.",
  "FORM.FIELD.STUDENTID.PH": "Account",
  "FORM.FIELD.STUDENTID.TYPE.MSG": "Account in wrong format!",
  "FORM.FIELD.STUDENTID.MSG": "Please enter account",
  "FORM.FIELD.PASSWORD": "Password",
  "FORM.FIELD.PASSWORD.PH": "Please enter password",
  "FORM.FIELD.PASSWORD.NEW.PH": "Enter a new password",
  "FORM.FIELD.PASSWORD.OLD.PH": "Please enter the current password",
  "FORM.FIELD.PASSWORD.OLD.MSG": "Please enter the correct password",
  "FORM.FIELD.PASSWORD.MSG": "Format error, please enter 6-20 characters",
  "FORM.FIELD.PASSWORD.MIN.MSG": "The password must contain 6 numbers at least!",
  "FORM.FIELD.PASSWORD.MAX.MSG": "The password can contain 20 numbers at most!",
  "FORM.FIELD.PASSWORD.CONTACT.MSG": "Please enter correct password, forget password, contact teachers",
  "FORM.FIELD.CODE.PH": "Verification code",
  "FORM.FIELD.CODE.MSG": "Please enter your email verification code!",
  "FORM.FIELD.CODE.CURRENT.MSG": "Please enter correct verify code",
  "RENAME.ERR.NULL.MSG": "File name cannot be empty",
  "RENAME.ERR.PREFIX.MSG": "The file name cannot start with + - .",
  "RENAME.ERR.CONTAIN.MSG": "The file name can't contain characters like \\ / : * ? \" < > | @ , # $ & ( ) ",
  "RENAME.ERR.KEY.MSG": " are illegal characters, please retype",
  "RENAME.ERR.EXIST.MSG": "The file name has been created.",
  "NETWORK.ERR.MSG": "Network error! Please try again later!",
  "SOCIAL.WECHAT": "Wechat",
  "SOCIAL.QQ": "QQ",
  "SOCIAL.GOOGLE": "Google",
  "MSG.10001": "Illegal email format!",
  "MSG.10002": "The email has been taken!",
  "MSG.10003": "The email has been associated!",
  "MSG.10004": "The email account does not exist!",
  "MSG.10005": "Wrong e-mail password!",
  "MSG.10006": "Illegal verification code!",
  "MSG.10007": "The UID does not exit!",
  "MSG.10008": "Illegal string length!",
  "MSG.10009": "Illegal character type!",
  "MSG.10010": "Illegal UID!",
  "MSG.10011": "Third-party authorization error!",
  "MSG.10012": "The new password and the old password are not the same!",
  "MSG.10013": "Incorrect ID or password!",
  "MSG.10014": "Invalid association with other third-party media!",
  "MSG.10015": "Invalid association with email!",
  "MSG.10016": "The third-party associated does not exist!",
  "MSG.10017": "Incorrect request parameter!",
  "MSG.10018": "The third-party media has been associated!",
  "MSG.10101": "WeChat approval error!",
  "MSG.10102": "WeChat callback error!",
  "MSG.10103": "QQ approval error!",
  "MSG.10104": "Facebook approval error!",
  "MSG.10105": "Google approval error!",
  "MSG.10106": "Callback state error!",
  "MSG.10107": "Failed to cancel the association!",
  "MSG.20001": "Please do not Sign in twice!",
  "MSG.20002": "Please Sign in first!",
  "MSG.20003": "JSONException!",
  "MSG.20004": "Incorrect request parameter!",
  "MSG.20005": "Illegal email format!",
  "MSG.20006": "Incorrect user name or password!",
  "MSG.20007": "Wrong verification code!",
  "MSG.20008": "The email has been taken!",
  "MSG.20009": "The email account does not exist",
  "MSG.30001": "Not signed in",
  "MSG.30002": "Unknown error. Failed to read\/write redis.",
  "MSG.30003": "Unsupported mainboard type",
  "MSG.30004": "Incorrect request parameter!",
  "MSG.30005": "The cloud list does not exist.",
  "MSG.30006": "The cloud list has been created.",
  "MSG.30007": "The cloud list has reached its maximum length.",
  "MSG.30008": "The could list has reached its limit in number.",
  "MSG.99999": "Network error. Please check your network.",
  "MSG.404": "Request failed. Please try again later. 404",
  "MSG.500": "Request failed. Please try again later. 500",
  "MSG.503": "Request failed. Please try again later. 503",
  "MSG.-1": "Request failed. Please try again later. -1",
  "WEBGL.NOT.SUPPORT": "Your video card drive version is too low, please update it and then try again.",
  "BLOCK.USE.NEED.LOGIN": "You need to Sign in to use the block.",
  "DOWNLOAD.LOADING.TEXT": "Loading...",
  "DOWNLOAD.LOADING.FAILURE": "Sync failure",
  "DOWNLOAD.LOADING.NETWORK.DISCONNECT": "Network error",
  "MENU.FILE.SAVEMY": "Save as My Project",
  "MENU.FILE.LOCALFILE": "Local file",
  "MENU.FILE.SAVEING": "Saving...",
  "MENU.FILE.SAVE.SUCCESS": "Saved successfully",
  "MENU.FILE.SAVE.FAIL": "Save failed",
  "MENU.FILE.UPLOAD.FAIL": "Save failed. You can download the project to your computer.",
  "MENU.FILE.SAVE.NAME": "Project name",
  "FORM.FIELD.NEWNAME.MAX.MSG": "The project name should include 48 characters at most.",
  "FORM.FIELD.NEWNAME.REQUIRE.MSG": "Please give your project a name",
  "DOWNLOAD.LOADING.RETRY": "Click to retry",
  "USER.LOGIN.TO_LOGIN_TIP": "Please sign in first",
  "MENU.FILE.PUBLISH.SUCCESS": "published",
  "MENU.FILE.PUBLISH.UPDATE": "update success",
  "MENU.FILE.NEW.WEB": "New",
  "MENU.FILE.OPEN.WEB": "Open",
  "MENU.FILE.SAVE.WEB": "Save",
  "MENU.FILE.SAVEAS.WEB": "Save As...",
  "MENU.FILE.IMPORT": "Open from your compute",
  "MENU.FILE.EXPORT": "Save to your computer",
  "USER.HOME_PAGE": "Profile"
},
"mblock5-i18n/example": {
  "PROGRAM.DEMOS.TITLE": "Example Programs",
  "PROGRAM.DEMOS.EVENT": "Events"
},
"mblock5-i18n/exts": {
  "EXTENSION.TITLE": "Extension center",
  "EXTENSION.EMPTY": "Coming Soon...",
  "EXTENSION.ADDED": "The extension has been added.",
  "EXTENSION.REMOVED": "The extension has been removed.",
  "EXTENSION.REMOVED.FAIL": "The extension is being used and cannot be removed for the time being.",
  "EXTENSION.REMOVED.CONFIRM": "Are you sure you want to delete it? After deleting, you will not be able to use the building blocks of the extension."
},
"mblock5-i18n/feedback": {
  "FEEDBACK.MODAL.TITLE": "Feedback",
  "FEEDBACK.FORM.PROFESSION": "Your Identity",
  "FEEDBACK.PROFESSION.LIST": [
    "Teacher",
    "Student",
    "Parent",
    "Maker"
  ],
  "FEEDBACK.FORM.DESCRIPTION": "Your suggestions/feedbacks",
  "FEEDBACK.FORM.DESCRIPTION.REQUIRE": "Please enter your suggestions/feedbacks",
  "FEEDBACK.FORM.ATTACHMENT": "Attachments",
  "FEEDBACK.FORM.ATTACHMENT.UPLOAD.TEXT": "Click to upload attachments.",
  "FEEDBACK.FORM.ATTACHMENT.UPLOAD.MAXSIZE": "File size ≤10M",
  "FEEDBACK.FORM.CONTACT": "Your contact",
  "FEEDBACK.FORM.CALL": "What is your name?",
  "FEEDBACK.ADD.SUCCESS": "Submitted!",
  "FEEDBACK.ADD.FAILED": "Fail to submit. Please try again."
},
"mblock5-i18n/hardware": {
  "CODEY": "Codey",
  "ROCKY": "Rocky",
  "CODEY_ROCKY": "Codey Rocky",
  "NEURON": "Neuron",
  "MBOT": "mBot",
  "STAGE": "Stage",
  "AI": "AI",
  "IOT": "IoT"
},
"mblock5-i18n/project": {
  "PROJECT.SHOW.DIALOG.TITLE": "Open",
  "PROJECT.SAVE.DIALOG.TITLE": "Save",
  "PROJECT.DIALOG.FILTER.NAME": "mBlock Project",
  "PROJECT.MENU.OPEN": "Open",
  "PROJECT.MENU.SHARE": "Share",
  "PROJECT.MENU.RENAME": "Rename",
  "PROJECT.MENU.COPY": "Copy",
  "PROJECT.MENU.EXPORT": "Save to your computer",
  "PROJECT.MENU.DELETE": "Delete",
  "PROJECT.MENU.EDITSHARED": "Go to the detail page",
  "PROJECT.MENU.CANCELSHARE": "Withdraw",
  "PROJECT.STATUS.SYNCING": "Project list syncing...",
  "PROJECT.STATUS.SUCCESS": "Sync success",
  "PROJECT.STATUS.NONETWORK": "Network error. Please check it.",
  "PROJECT.STATUS.FAIL": "Sync failure. Try again.",
  "PROJECT.STATUS.WILLUPLOAD": "Not uploaded",
  "PROJECT.STATUS.UPLOADING": "Uploading",
  "PROJECT.STATUS.WILLDOWNLOAD": "To be downloaded",
  "PROJECT.DELETE": "Delete the project",
  "PROJECT.DELETE.TEXT": "Continue to delete the project?",
  "PROJECT.DELETE.ALSO.TEXT": "The project will also be removed from the cloud. Continue to delete it?",
  "PROJECT.CONFIRM.LOGOUT.WILLUPLOAD.TEXT": "There is a project to be uploaded in My Project. You won't be able to sync it with the cloud if you sign out. Continue? ",
  "PROJECT.CONFIRM.LOGOUT.SYNC.TEXT": "You won't be able to sync projects with the cloud if you sign out. Continue？",
  "PROJECT.NAME": "Project Name",
  "PROJECT.NAME.MIN.LENGTH.TEXT": "The project name can not be empty.",
  "PROJECT.NAME.MAX.LENGTH.TEXT": "The project name should include 48 characters at most.",
  "PROJECT.MAX.LENGTH.TEXT": "The length should not exceed 1000 characters.",
  "PROJECT.INTRODUCTION": "Project Introduction",
  "PROJECT.INTRODUCTION.PLACEHOLDER": "Give more details about your project. Remember to specify the original authors if you adapt, repost or borrow others' projects or materials ",
  "PROJECT.OPERATION": "How-to Guide ",
  "PROJECT.OPERATION.PLACEHOLDER": "Tell other people how to operate your project.",
  "PROJECT.AGREE.TEXT": "I've read and accept Makeblock's ",
  "PROJECT.AGREEMENT": "Community Agreement ",
  "PROJECT.SHARE.DELETE": "Delete the shared project?",
  "PROJECT.SHARE.DELETE.TEXT": "The project has been shared. After you delete the project, it will be withdrawn from the Community and removed from the cloud. Continue to delete it?",
  "PROJECT.SHARE.DELETE.ERROR": "Deletion failed",
  "PROJECT.SHARE.DELETE.ERROR.NETWORK": "Network error. Deletion failed.",
  "PROJECT.SHARE.SUCCESS": "The project has been shared. Go to the ",
  "PROJECT.SHARE.SOCIAL": "project community",
  "PROJECT.SHARE.LOOKING": " to explore more ~",
  "PROJECT.SHARE.ERROR.NETWORK": "Failed to share the project. Please check the network and then try again",
  "PROJECT.CANCEL.SHARE": "Cancel the project sharing?",
  "PROJECT.CANCEL.SHARE.ERROR.NETWORK": "Unshare failed. Please check the network and then try again.",
  "PROJECT.CANCEL.SHARE.SUCCESS": "Unshare success",
  "PROJECT.CANCEL.SHARE.TEXT": "The project will not be found in the Project Community after you unshare the project. Continue?",
  "PROJECT.LIST.EMPTY.TEXT": "Your project list is empty",
  "PROJECT.SORTBY.RECENT": "Recent"
},
"mblock5-i18n/sprite": {
  "SPRITE.LIBS.TITLE": "Sprite Library",
  "SPRITE.LIBS.USER.TITLE": "My Sprites",
  "SPRITE.COSTUMES.TITLE": "Costumes",
  "SPRITE.COSTUMES.USER.TITLE": "My Costumes",
  "SPRITE.BACKDROPS.TITLE": "Backdrop Library",
  "SPRITE.BACKDROPS.USER.TITLE": "My Backdrops",
  "SPRITE.SOUNDS.TITLE": "Sounds",
  "SPRITE.SOUNDS.USER.TITLE": "My Sounds",
  "SPRITE.DEVICES.TITLE": "Device Library",
  "SPRITE.UPLOAD.MSG": "\"{0}\",upload JPG, PNG or SVG file only!",
  "SPRITE.UPLOAD.SIZE.LIMIT.MSG": "\"{0}\", must be smaller than 2MB!",
  "SPRITE.UPLOAD.EXISTS.MSG": "\"{0}\" has existed!",
  "SPRITE.SEARCH.TEXT": "Search",
  "SPRITE.LOAD.FAIL.MSG": "File parsing failed"
},
"mblock5-i18n/updater": {
  "UPDATER.CHECKER.TITLE": "Check for Updates",
  "UPDATER.CHECKER.CHECKING": "Checking for updates...",
  "UPDATER.CHECKER.LATEST.TITLE": "The current version is the latest one.",
  "UPDATER.CHECKER.LATEST.TEXT": "An update is not necessary because the current version is the latest one.",
  "UPDATER.CHECKER.NETWORK.TITLE": "Network Connection Error",
  "UPDATER.CHECKER.NETWORK.TEXT": "No network connection detected. Please try again later.",
  "UPDATER.CHECKER.CONTENT.TITLE": "A new version is available now.",
  "UPDATER.CHECKER.CONTENT.VERSION.BEFORE": "An update to the version",
  "UPDATER.CHECKER.CONTENT.FEATURES.LABEL": "New Version Features:",
  "UPDATER.RESTART.TITLE": "Restart",
  "UPDATER.RESTART.CONTENT.TITLE": "An update is finished.",
  "UPDATER.RESTART.CONTENT.TEXT": "Please restart the software to experience the new version.",
  "UPDATER.RESTART.CONTENT.TITLE.WIN": "An update is finished. Please restart the software to try new features.",
  "UPDATER.RESTART.CONTENT.TEXT.WIN": "To ensure the system stability, you need to start the software manually.",
  "UPDATER.FIRMWARE.TITLE": "To Update Firmware?",
  "UPDATER.FIRMWARE.CONTENT.TITLE": "The firmware does not match the software, so the program may fail to run properly.",
  "UPDATER.FIRMWARE.CONTENT.TEXT": "It may take one minute to upgrade the firmware. To avoid that the progress is disrupted, please keep your computer running properly and do not work on other operations during the period.",
  "UPDATER.FIRMWARE.CONTENT.TEXT.BLE": "Please connect your device with the computer with the USB cable. Then upgrade the firmware according to tips. Next, you can upload the program.",
  "UPDATER.FIRMWARE.SUCCESS.TITLE": "The update is finished.",
  "UPDATER.FIRMWARE.SUCCESS.CONTENT.TITLE": "The firmware update is finished!",
  "UPDATER.FIRMWARE.SUCCESS.CONTENT.TEXT": "Please restart the device for a better experience.",
  "UPDATER.FIRMWARE.FAILED.TITLE": "The update failed.",
  "UPDATER.FIRMWARE.FAILED.CONTENT.TITLE": "The firmware update failed again. Please try again.",
  "UPDATER.FIRMWARE.FAILED.CONTENT.TIPS": "Failed again? Please check if the device is connected in the right way.",
  "UPDATER.FIRMWARE.LOADING.TITLE": "Updating the firmware...",
  "UPDATER.FIRMWARE.LOADING.CONTENT.TEXT": "Please do not shut down the software and try to avoid other operations.",
  "UPDATER.PROGRESS.ERROR": "Network Connection Error. Please try again later.",
  "UPDATER.PROGRESS.PERCENT": "Update Progress:{0}%",
  "UPDATER.REMIND.TEXT": "Remind me when any update is available.",
  "UPDATER.NOT.SUPPORT.UPDATE": "The current version does not support auto-update.",
  "UPDATER.FRIMWARE.M.TITLE": "Device Firmware Updates",
  "UPDATER.FRIMWARE.F.DEVICE.TEXT": "Device",
  "UPDATER.FRIMWARE.F.VERSION.TEXT": "Firmware Version",
  "UPDATER.FRIMWARE.NOTCONNECT": "No device is connected. Please connect your device first.",
  "UPDATER.NO.NEED.UPDATE": "The current firmware matches the software, so an update is not necessary.",
  "UPDATER.CANT.USE.BLE.TITLE": "The current version does not support firmware updates via Bluetooth.",
  "UPDATER.CANT.USE.BLE.TEXT": "Please connect your device to the computer. Then you can update your device.",
  "UPDATE.FACTORY.DATA.RESET": "Factory data reset",
  "UPDATE.FACTORY.DATA.LATEST": "online firmware"
},
"mscratch-i18n/msg": {
    "blocks": {
        "CONTROL_FOREVER": "forever",
        "CONTROL_REPEAT": "repeat %1",
        "CONTROL_IF": "if %1 then",
        "CONTROL_ELSE": "else",
        "CONTROL_STOP": "stop",
        "CONTROL_STOP_ALL": "all",
        "CONTROL_STOP_THIS": "this script",
        "CONTROL_STOP_OTHER": "other scripts in sprite",
        "CONTROL_WAIT": "wait %1 seconds",
        "CONTROL_WAITUNTIL": "wait until %1",
        "CONTROL_REPEATUNTIL": "repeat until %1",
        "CONTROL_WHILE": "while %1",
        "CONTROL_FOREACH": "for each %1 in %2",
        "CONTROL_STARTASCLONE": "when I start as a clone",
        "CONTROL_CREATECLONEOF": "create clone of %1",
        "CONTROL_CREATECLONEOF_MYSELF": "myself",
        "CONTROL_DELETETHISCLONE": "delete this clone",
        "CONTROL_COUNTER": "counter",
        "CONTROL_INCRCOUNTER": "increment counter",
        "CONTROL_CLEARCOUNTER": "clear counter",
        "CONTROL_ALLATONCE": "all at once",
        "DATA_SETVARIABLETO": "set %1 to %2",
        "DATA_CHANGEVARIABLEBY": "change %1 by %2",
        "DATA_SHOWVARIABLE": "show variable %1",
        "DATA_HIDEVARIABLE": "hide variable %1",
        "DATA_ADDTOLIST": "add %1 to %2",
        "DATA_DELETEOFLIST": "delete %1 of %2",
        "DATA_DELETEALLOFLIST": "delete all of %1",
        "DATA_INSERTATLIST": "insert %1 at %2 of %3",
        "DATA_REPLACEITEMOFLIST": "replace item %1 of %2 with %3",
        "DATA_ITEMOFLIST": "item %1 of %2",
        "DATA_LENGTHOFLIST": "length of %1",
        "DATA_LISTCONTAINSITEM": "%1 contains %2?",
        "DATA_SHOWLIST": "show list %1",
        "DATA_HIDELIST": "hide list %1",
        "DATA_INDEX_ALL": "all",
        "DATA_INDEX_LAST": "last",
        "DATA_INDEX_RANDOM": "random",
        "EVENT_WHENFLAGCLICKED": "when %1 clicked",
        "EVENT_WHENTHISSPRITECLICKED": "when this sprite clicked",
        "EVENT_WHENSTAGECLICKED": "when stage clicked",
        "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
        "EVENT_WHENBROADCASTRECEIVED": "when I receive %1",
        "EVENT_WHENBACKDROPSWITCHESTO": "when backdrop switches to %1",
        "EVENT_WHENGREATERTHAN": "when %1 > %2",
        "EVENT_WHENGREATERTHAN_TIMER": "timer",
        "EVENT_WHENGREATERTHAN_LOUDNESS": "loudness",
        "EVENT_BROADCAST": "broadcast %1",
        "EVENT_BROADCASTANDWAIT": "broadcast %1 and wait",
        "EVENT_WHENKEYPRESSED": "when %1 key pressed",
        "EVENT_WHENKEYPRESSED_SPACE": "space",
        "EVENT_WHENKEYPRESSED_LEFT": "left arrow",
        "EVENT_WHENKEYPRESSED_RIGHT": "right arrow",
        "EVENT_WHENKEYPRESSED_DOWN": "down arrow",
        "EVENT_WHENKEYPRESSED_UP": "up arrow",
        "EVENT_WHENKEYPRESSED_ANY": "any",
        "LOOKS_SAYFORSECS": "say %1 for %2 seconds",
        "LOOKS_SAY": "say %1",
        "LOOKS_HELLO": "Hello!",
        "LOOKS_THINKFORSECS": "think %1 for %2 seconds",
        "LOOKS_THINK": "think %1",
        "LOOKS_HMM": "Hmm...",
        "LOOKS_SHOW": "show",
        "LOOKS_HIDE": "hide",
        "LOOKS_HIDEALLSPRITES": "hide all sprites",
        "LOOKS_EFFECT_COLOR": "color",
        "LOOKS_EFFECT_FISHEYE": "fisheye",
        "LOOKS_EFFECT_WHIRL": "whirl",
        "LOOKS_EFFECT_PIXELATE": "pixelate",
        "LOOKS_EFFECT_MOSAIC": "mosaic",
        "LOOKS_EFFECT_BRIGHTNESS": "brightness",
        "LOOKS_EFFECT_GHOST": "ghost",
        "LOOKS_CHANGEEFFECTBY": "change %1 effect by %2",
        "LOOKS_SETEFFECTTO": "set %1 effect to %2",
        "LOOKS_CLEARGRAPHICEFFECTS": "clear graphic effects",
        "LOOKS_CHANGESIZEBY": "change size by %1",
        "LOOKS_SETSIZETO": "set size to %1 %",
        "LOOKS_SIZE": "size",
        "LOOKS_CHANGESTRETCHBY": "change stretch by %1",
        "LOOKS_SETSTRETCHTO": "set stretch to %1 %",
        "LOOKS_SWITCHCOSTUMETO": "switch costume to %1",
        "LOOKS_NEXTCOSTUME": "next costume",
        "LOOKS_SWITCHBACKDROPTO": "switch backdrop to %1",
        "LOOKS_GOTOFRONTBACK": "go to %1 layer",
        "LOOKS_GOTOFRONTBACK_FRONT": "front",
        "LOOKS_GOTOFRONTBACK_BACK": "back",
        "LOOKS_GOFORWARDBACKWARDLAYERS": "go %1 %2 layers",
        "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "forward",
        "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "backward",
        "LOOKS_BACKDROPNUMBERNAME": "backdrop %1",
        "LOOKS_COSTUMENUMBERNAME": "costume %1",
        "LOOKS_NUMBERNAME_NUMBER": "number",
        "LOOKS_NUMBERNAME_NAME": "name",
        "LOOKS_SWITCHBACKDROPTOANDWAIT": "switch backdrop to %1 and wait",
        "LOOKS_NEXTBACKDROP_BLOCK": "next backdrop",
        "LOOKS_NEXTBACKDROP": "next backdrop",
        "LOOKS_PREVIOUSBACKDROP": "previous backdrop",
        "LOOKS_RANDOMBACKDROP": "random backdrop",
        "MOTION_MOVESTEPS": "move %1 steps",
        "MOTION_TURNLEFT": "turn %1 %2 degrees",
        "MOTION_TURNRIGHT": "turn %1 %2 degrees",
        "MOTION_POINTINDIRECTION": "point in direction %1",
        "MOTION_POINTTOWARDS": "point towards %1",
        "MOTION_POINTTOWARDS_POINTER": "mouse-pointer",
        "MOTION_GOTO": "go to %1",
        "MOTION_GOTO_POINTER": "mouse-pointer",
        "MOTION_GOTO_RANDOM": "random position",
        "MOTION_GOTOXY": "go to x: %1 y: %2",
        "MOTION_GLIDESECSTOXY": "glide %1 secs to x: %2 y: %3",
        "MOTION_GLIDETO": "glide %1 secs to %2",
        "MOTION_GLIDETO_POINTER": "mouse-pointer",
        "MOTION_GLIDETO_RANDOM": "random position",
        "MOTION_CHANGEXBY": "change x by %1",
        "MOTION_SETX": "set x to %1",
        "MOTION_CHANGEYBY": "change y by %1",
        "MOTION_SETY": "set y to %1",
        "MOTION_IFONEDGEBOUNCE": "if on edge, bounce",
        "MOTION_SETROTATIONSTYLE": "set rotation style %1",
        "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "left-right",
        "MOTION_SETROTATIONSTYLE_DONTROTATE": "don't rotate",
        "MOTION_SETROTATIONSTYLE_ALLAROUND": "all around",
        "MOTION_XPOSITION": "x position",
        "MOTION_YPOSITION": "y position",
        "MOTION_DIRECTION": "direction",
        "MOTION_SCROLLRIGHT": "scroll right %1",
        "MOTION_SCROLLUP": "scroll up %1",
        "MOTION_ALIGNSCENE": "align scene %1",
        "MOTION_ALIGNSCENE_BOTTOMLEFT": "bottom-left",
        "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bottom-right",
        "MOTION_ALIGNSCENE_MIDDLE": "middle",
        "MOTION_ALIGNSCENE_TOPLEFT": "top-left",
        "MOTION_ALIGNSCENE_TOPRIGHT": "top-right",
        "MOTION_XSCROLL": "x scroll",
        "MOTION_YSCROLL": "y scroll",
        "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
        "OPERATORS_ADD": "%1 + %2",
        "OPERATORS_SUBTRACT": "%1 - %2",
        "OPERATORS_MULTIPLY": "%1 * %2",
        "OPERATORS_DIVIDE": "%1 / %2",
        "OPERATORS_RANDOM": "pick random %1 to %2",
        "OPERATORS_GT": "%1 > %2",
        "OPERATORS_LT": "%1 < %2",
        "OPERATORS_EQUALS": "%1 = %2",
        "OPERATORS_AND": "%1 and %2",
        "OPERATORS_OR": "%1 or %2",
        "OPERATORS_NOT": "not %1",
        "OPERATORS_JOIN": "join %1 %2",
        "OPERATORS_JOIN_APPLE": "apple",
        "OPERATORS_JOIN_BANANA": "banana",
        "OPERATORS_LETTEROF": "letter %1 of %2",
        "OPERATORS_LETTEROF_APPLE": "a",
        "OPERATORS_LENGTH": "length of %1",
        "OPERATORS_CONTAINS": "%1 contains %2?",
        "OPERATORS_MOD": "%1 mod %2",
        "OPERATORS_ROUND": "round %1",
        "OPERATORS_MATHOP": "%1 of %2",
        "OPERATORS_MATHOP_ABS": "abs",
        "OPERATORS_MATHOP_FLOOR": "floor",
        "OPERATORS_MATHOP_CEILING": "ceiling",
        "OPERATORS_MATHOP_SQRT": "sqrt",
        "OPERATORS_MATHOP_SIN": "sin",
        "OPERATORS_MATHOP_COS": "cos",
        "OPERATORS_MATHOP_TAN": "tan",
        "OPERATORS_MATHOP_ASIN": "asin",
        "OPERATORS_MATHOP_ACOS": "acos",
        "OPERATORS_MATHOP_ATAN": "atan",
        "OPERATORS_MATHOP_LN": "ln",
        "OPERATORS_MATHOP_LOG": "log",
        "OPERATORS_MATHOP_EEXP": "e ^",
        "OPERATORS_MATHOP_10EXP": "10 ^",
        "PROCEDURES_DEFINITION": "define %1",
        "SENSING_TOUCHINGOBJECT": "touching %1?",
        "SENSING_TOUCHINGOBJECT_POINTER": "mouse-pointer",
        "SENSING_TOUCHINGOBJECT_EDGE": "edge",
        "SENSING_TOUCHINGCOLOR": "touching color %1?",
        "SENSING_COLORISTOUCHINGCOLOR": "color %1 is touching %2?",
        "SENSING_DISTANCETO": "distance to %1",
        "SENSING_DISTANCETO_POINTER": "mouse-pointer",
        "SENSING_ASKANDWAIT": "ask %1 and wait",
        "SENSING_ASK_TEXT": "What's your name?",
        "SENSING_ANSWER": "answer",
        "SENSING_KEYPRESSED": "key %1 pressed?",
        "SENSING_MOUSEDOWN": "mouse down?",
        "SENSING_MOUSEX": "mouse x",
        "SENSING_MOUSEY": "mouse y",
        "SENSING_SETDRAGMODE": "set drag mode %1",
        "SENSING_SETDRAGMODE_DRAGGABLE": "draggable",
        "SENSING_SETDRAGMODE_NOTDRAGGABLE": "not draggable",
        "SENSING_LOUDNESS": "loudness",
        "SENSING_LOUD": "loud?",
        "SENSING_TIMER": "timer",
        "SENSING_RESETTIMER": "reset timer",
        "SENSING_OF": "%1 of %2",
        "SENSING_OF_XPOSITION": "x position",
        "SENSING_OF_YPOSITION": "y position",
        "SENSING_OF_DIRECTION": "direction",
        "SENSING_OF_COSTUMENUMBER": "costume #",
        "SENSING_OF_COSTUMENAME": "costume name",
        "SENSING_OF_SIZE": "size",
        "SENSING_OF_VOLUME": "volume",
        "SENSING_OF_BACKDROPNUMBER": "backdrop #",
        "SENSING_OF_BACKDROPNAME": "backdrop name",
        "SENSING_OF_STAGE": "Stage",
        "SENSING_CURRENT": "current %1",
        "SENSING_CURRENT_YEAR": "year",
        "SENSING_CURRENT_MONTH": "month",
        "SENSING_CURRENT_DATE": "date",
        "SENSING_CURRENT_DAYOFWEEK": "day of week",
        "SENSING_CURRENT_HOUR": "hour",
        "SENSING_CURRENT_MINUTE": "minute",
        "SENSING_CURRENT_SECOND": "second",
        "SENSING_DAYSSINCE2000": "days since 2000",
        "SENSING_USERNAME": "username",
        "SENSING_USERID": "user id",
        "SOUND_PLAY": "start sound %1",
        "SOUND_PLAYUNTILDONE": "play sound %1 until done",
        "SOUND_STOPALLSOUNDS": "stop all sounds",
        "SOUND_SETEFFECTO": "set %1 effect to %2",
        "SOUND_CHANGEEFFECTBY": "change %1 effect by %2",
        "SOUND_CLEAREFFECTS": "clear sound effects",
        "SOUND_EFFECTS_PITCH": "pitch",
        "SOUND_EFFECTS_PAN": "pan left/right",
        "SOUND_CHANGEVOLUMEBY": "change volume by %1",
        "SOUND_SETVOLUMETO": "set volume to %1%",
        "SOUND_VOLUME": "volume",
        "CATEGORY_MOTION": "Motion",
        "CATEGORY_LOOKS": "Looks",
        "CATEGORY_SOUND": "Sound",
        "CATEGORY_EVENTS": "Events",
        "CATEGORY_CONTROL": "Control",
        "CATEGORY_SENSING": "Sensing",
        "CATEGORY_OPERATORS": "Operators",
        "CATEGORY_VARIABLES": "Variables",
        "CATEGORY_MYBLOCKS": "My Blocks",
        "DUPLICATE": "Duplicate",
        "DELETE": "Delete",
        "ADD_COMMENT": "Add Comment",
        "REMOVE_COMMENT": "Remove Comment",
        "DELETE_BLOCK": "Delete Block",
        "DELETE_X_BLOCKS": "Delete %1 Blocks",
        "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
        "CLEAN_UP": "Clean up Blocks",
        "HELP": "Help",
        "UNDO": "Undo",
        "REDO": "Redo",
        "EDIT_PROCEDURE": "Edit",
        "SHOW_PROCEDURE_DEFINITION": "Go to definition",
        "WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
        "COLOUR_HUE_LABEL": "Color",
        "COLOUR_SATURATION_LABEL": "Saturation",
        "COLOUR_BRIGHTNESS_LABEL": "Brightness",
        "CHANGE_VALUE_TITLE": "Change value:",
        "RENAME_VARIABLE": "Rename variable",
        "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
        "RENAME_VARIABLE_MODAL_TITLE": "Rename Variable",
        "NEW_VARIABLE": "Make a Variable",
        "NEW_VARIABLE_TITLE": "New variable name:",
        "VARIABLE_MODAL_TITLE": "New Variable",
        "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
        "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
        "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
        "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
        "DELETE_VARIABLE": "Delete the \"%1\" variable",
        "NEW_PROCEDURE": "Make a Block",
        "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
        "PROCEDURE_DEFAULT_NAME": "block name",
        "NEW_LIST": "Make a List",
        "NEW_LIST_TITLE": "New list name:",
        "LIST_MODAL_TITLE": "New List",
        "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
        "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
        "RENAME_LIST_MODAL_TITLE": "Rename List",
        "DEFAULT_LIST_ITEM": "thing",
        "NEW_BROADCAST_MESSAGE": "New message",
        "NEW_BROADCAST_MESSAGE_TITLE": "New message name:",
        "BROADCAST_MODAL_TITLE": "New Message",
        "DEFAULT_BROADCAST_MESSAGE_NAME": "message1",
        "procedures_number": "number",
        "procedures_string": "string",
        "procedures_boolean": "boolean",
        "procedures_blockName": "block name",
        "procedures_label": "label text",
        "CLOUD_LIST": "Cloud list",
        "Top": "Top",
        "Motion": "Motion",
        "Looks": "Looks",
        "Sound": "Sound",
        "Events": "Events",
        "Control": "Control",
        "Sensing": "Sensing",
        "Operators": "Operators",
        "Data": "Data",
        "Variables": "Variables",
        "My Blocks": "My Blocks",
        "Comm": "Infrared",
        "irRemote": "IR Remote",
        "Pen": "Pen",
        "Music": "Music"
    },
    "extensions": {
        "music": {
            "music.name": "Music",
            "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
            "music.restForBeats": "rest for [BEATS] beats",
            "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
            "music.setInstrument": "set instrument to [INSTRUMENT]",
            "music.setTempo": "set tempo to [TEMPO]",
            "music.changeTempo": "change tempo by [TEMPO]",
            "music.getTempo": "tempo",
            "music.drumSnare": "(1) Snare Drum",
            "music.drumBass": "(2) Bass Drum",
            "music.drumSideStick": "(3) Side Stick",
            "music.drumCrashCymbal": "(4) Crash Cymbal",
            "music.drumOpenHiHat": "(5) Open Hi-Hat",
            "music.drumClosedHiHat": "(6) Closed Hi-Hat",
            "music.drumTambourine": "(7) Tambourine",
            "music.drumHandClap": "(8) Hand Clap",
            "music.drumClaves": "(9) Claves",
            "music.drumWoodBlock": "(10) Wood Block",
            "music.drumCowbell": "(11) Cowbell",
            "music.drumTriangle": "(12) Triangle",
            "music.drumBongo": "(13) Bongo",
            "music.drumConga": "(14) Conga",
            "music.drumCabasa": "(15) Cabasa",
            "music.drumGuiro": "(16) Guiro",
            "music.drumVibraslap": "(17) Vibraslap",
            "music.drumCuica": "(18) Cuica",
            "music.instrumentPiano": "(1) Piano",
            "music.instrumentElectricPiano": "(2) Electric Piano",
            "music.instrumentOrgan": "(3) Organ",
            "music.instrumentGuitar": "(4) Guitar",
            "music.instrumentElectricGuitar": "(5) Electric Guitar",
            "music.instrumentBass": "(6) Bass",
            "music.instrumentPizzicato": "(7) Pizzicato",
            "music.instrumentCello": "(8) Cello",
            "music.instrumentTrombone": "(9) Trombone",
            "music.instrumentClarinet": "(10) Clarinet",
            "music.instrumentSaxophone": "(11) Saxophone",
            "music.instrumentFlute": "(12) Flute",
            "music.instrumentWoodenFlute": "(13) Wooden Flute",
            "music.instrumentBassoon": "(14) Bassoon",
            "music.instrumentChoir": "(15) Choir",
            "music.instrumentVibraphone": "(16) Vibraphone",
            "music.instrumentMusicBox": "(17) Music Box",
            "music.instrumentSteelDrum": "(18) Steel Drum",
            "music.instrumentMarimba": "(19) Marimba",
            "music.instrumentSynthLead": "(20) Synth Lead",
            "music.instrumentSynthPad": "(21) Synth Pad"
        },
        "pen": {
            "pen.name": "Pen",
            "pen.colorMenu.color": "color",
            "pen.colorMenu.saturation": "saturation",
            "pen.colorMenu.brightness": "brightness",
            "pen.colorMenu.transparency": "transparency",
            "pen.clear": "clear",
            "pen.stamp": "stamp",
            "pen.penDown": "pen down",
            "pen.penUp": "pen up",
            "pen.setColor": "set pen color to [COLOR]",
            "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
            "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
            "pen.changeSize": "change pen size by [SIZE]",
            "pen.setSize": "set pen size to [SIZE]",
            "pen.setShade": "set pen shade to [SHADE]",
            "pen.changeShade": "change pen shade by [SHADE]",
            "pen.setHue": "set pen color to [HUE]",
            "pen.changeHue": "change pen color by [HUE]"
        }
    },
    "gui": {
        "gui.soundEditor.echo": "Echo",
        "gui.soundEditor.save": "Save",
        "gui.soundEditor.stop": "Stop",
        "gui.soundEditor.redo": "Redo",
        "gui.soundEditor.softer": "Softer",
        "gui.soundEditor.robot": "Robot",
        "gui.soundEditor.cannotStartRecording": "Could not start recording",
        "gui.stageSelector.targetPaneAddBackdrop": "Add Backdrop",
        "gui.soundEditor.trim": "Trim",
        "gui.costumeTab.addBackdrop": "Add Backdrop",
        "gui.spriteSelector.addSprite": "Add Sprite",
        "gui.spriteSelector.addDevice": "Add Device",
        "gui.soundEditor.slower": "Slower",
        "gui.turboMode.active": "Turbo Mode",
        "gui.soundEditor.play": "Play",
        "gui.soundTab.addSound": "Add Sound",
        "gui.spriteSelectorItem.contextMenuDuplicate": "duplicate",
        "gui.spriteSelectorItem.contextMenuDelete": "delete",
        "gui.stageSelector.backdrops": "Backdrops",
        "gui.stageSelector.stage": "Stage",
        "gui.soundEditor.louder": "Louder",
        "gui.soundEditor.faster": "Faster",
        "gui.soundTab.recordSound": "Record Sound",
        "gui.soundTab.beginRecord": "Begin recording by clicking the button below",
        "gui.soundTab.needPermission": "↖️ \u00A0We need your permission to use your microphone",
        "gui.soundTab.record": "Record",
        "gui.soundTab.stopRecording": "Stop recording",
        "gui.soundTab.soundLibrary": "Sound Library",
        "gui.soundTab.reRecord": "Re-record",
        "gui.soundTab.save": "Save",
        "gui.soundTab.saving": "Loading...",
        "gui.soundTab.play": "Play",
        "gui.soundTab.stop": "Stop",
        "gui.gui.addExtension": "Extensions",
        "gui.soundEditor.reverse": "Reverse",
        "gui.soundEditor.undo": "Undo",
        "gui.costumeTab.addCostume": "Add Costume",
        "gui.soundEditor.sound": "Sound",
        "gui.targets.costumes": "Costumes",
        "gui.targets.sounds": "Sounds",
        "gui.sprite.connect": "Connect",
        "gui.sprite.break": "Disconnect",
        "gui.sprite.device": "Device",
        "gui.sprite.upload": "Upload to device",
        "gui.sprite.test": "Test",
        "gui.sprite.sprite": "Sprite",
        "gui.sprite.name": "Name",
        "gui.sprite.show": "Show",
        "gui.sprite.direction": "Direction",
        "gui.sprite.rotation": "Rotation",
        "gui.rotation.leftRight": "left-right",
        "gui.rotation.noRotate": "don't rotate",
        "gui.rotation.allAround": "all around",
        "gui.modal.search": "what are you looking for?",
        "gui.modal.extensions": "Extension Library",
        "gui.modal.sprites": "Sprite Library",
        "gui.modal.backdrops": "Backdrop Library",
        "gui.modal.cancel": "Cancel",
        "gui.modal.ok": "OK",
        "gui.modal.newVariable": "New Variable",
        "gui.modal.NEW_VARIABLE": "New Variable",
        "gui.modal.NEW_VARIABLE_NAME": "variable name: ",
        "gui.modal.NEW_VARIABLE_ALL": "for all target and device use",
        "gui.modal.NEW_VARIABLE_THIS": "only for this target use",
        "gui.modal.NEW_VARIABLE_THIS_DEVICE": "only for this device use",
        "gui.modal.New Variable": "New Variable",
        "gui.modal.inputTip": "name cannot contain（&<>'\"）",
        "gui.modal.New Message": "New Message",
        "gui.modal.extensionNotice": "Tips for Extensions",
        "New variable name:": "New variable name:",
        "New list name:": "New list name:",
        "gui.device.connected": "Device connected",
        "gui.device.unconnected": "Connect your device",
        "gui.extensions.empty": "Library is empty",
        "gui.extensions.added": "Added",
        "gui.extensions.device": "Add-on",
        "gui.extensions.feature": "Others",
        "gui.extensions.unloadTitle": "Extension unload notice",
        "gui.extensions.unloadNotice": "The extension is being used, so it can not be removed",
        "gui.extensions.loadedSuccess": "The extension was added successfully",
        "gui.extensions.unloadedSuccess": "The extension was removed successfully",
        "gui.extensions.confimUnload": "Blocks of this extension will not be available after the extension is removed",
        "gui.sprites.sprite": "Sprites",
        "gui.sprites.device": "Devices",
        "gui.sprites.background": "Background",
        "gui.gui.tabCode": "Code",
        "gui.gui.codeType": "Programming language:",
        "gui.modal.costmues": "Costume Library",
        "gui.sprite.size": "Size",
        "gui.gui.variablePrompt": "More options",
        "gui.customProcedures.addAnInputNumber": "Add an input",
        "gui.customProcedures.addAnInputText": "Add an input",
        "gui.customProcedures.numberType": "number",
        "gui.customProcedures.textType": "text",
        "gui.customProcedures.booleanType": "boolean",
        "gui.customProcedures.addAnInputBoolean": "Add an input",
        "gui.customProcedures.addALabel": "Add a label",
        "gui.customProcedures.runWithoutScreenRefresh": "Run without screen refresh",
        "gui.customProcedures.cancel": "Cancel",
        "gui.customProcedures.ok": "OK",
        "gui.customProcedures.label": "Make a block",
        "gui.gui.stageSizeSmall": "Stage Size Toggle - Small",
        "gui.gui.stageSizeLarge": "Stage Size Toggle - Large",
        "gui.gui.stageSizeFull": "Stage Size Toggle - Full Screen",
        "gui.gui.stageSizeUnFull": "Stage Size Toggle - Un-full screen",
        "paint.paintEditor.more": "More",
        "paint.fillMode.fill": "Fill",
        "paint.modeTools.brushSize": "Brush size",
        "paint.modeTools.eraserSize": "Eraser size",
        "gui.sound.deleteTitle": "Delete the sound",
        "gui.sound.deleteMessage": "Are you sure to delete this sound?",
        "gui.sprite.deleteTitle": "Delete the sprite",
        "gui.sprite.deleteMessage": "Are you sure to delete this sprite?",
        "gui.costume.deleteTitle": "Delete the custome",
        "gui.costume.deleteMessage": "Are you sure to delete this custome?",
        "gui.backdrop.deleteTitle": "Delete the backdrop",
        "gui.backdrop.deleteMessage": "Are you sure to delete this backdrop?",
        "gui.facepanel.defaultFaces": "Example faces",
        "gui.facepanel.storeFaces": "Customize faces",
        "gui.costumeTab.addBlankBackdrop": "Add Blank Backdrop",
        "gui.costumeTab.addBlankCostume": "Add Blank Costume",
        "gui.code.noCodeToUpload": "No program is available for upload currently",
        "paint.paintEditor.bitmap": "Convert to Bitmap",
        "paint.paintEditor.vector": "Convert to Vector",
        "paint.modeTools.flipHorizontal": "Flip Horizontal",
        "paint.modeTools.flipVertical": "Flip Vertical",
        "paint.textMode.text": "text",
        "gui.comingSoon.message1": "Coming soon",
        "gui.comingSoon.message2": "Coming soon",
        "gui.comingSoon.message3": "Coming soon",
        "gui.extensionLibrary.comingSoon": "Coming soon",
        "paint.paintEditor.fill": "Fill",
        "paint.eraserMode.eraser": "Eraser",
        "paint.penMode.pen": "Pen",
        "paint.paintEditor.saturation": "Saturation",
        "paint.roundedRectMode.roundedRect": "Rounded Rectangle",
        "paint.brushMode.brush": "Brush",
        "paint.lineMode.line": "Line",
        "paint.reshapeMode.reshape": "Reshape",
        "paint.paintEditor.brightness": "Brightness",
        "paint.paintEditor.costume": "Costume",
        "paint.rectMode.rect": "Rectangle",
        "paint.ovalMode.oval": "Circle",
        "paint.paintEditor.hue": "Hue",
        "paint.paintEditor.stroke": "Outline",
        "paint.selectMode.select": "Select",
        "paint.paintEditor.undo": "Undo",
        "paint.paintEditor.redo": "Redo",
        "paint.paintEditor.group": "Group",
        "paint.paintEditor.ungroup": "Ungroup",
        "paint.paintEditor.forward": "Forward",
        "paint.paintEditor.backward": "Backward",
        "paint.paintEditor.front": "Front",
        "paint.paintEditor.back": "Back",
        "paint.modeTools.copy": "Copy",
        "paint.modeTools.paste": "Paste",
        "paint.modeTools.curved": "Curved",
        "paint.modeTools.pointed": "Pointed",
        "codey.colorSensor.calibration": "Color Sensor Calibration",
        "codey.gyro.calibration": "Gyro Sensor Calibration",
        "hardware_reset_firmware": "Reset Default Program ",
        "hardware_upgrade_firmware": "Upgrade Firmware",
        "hardware_upload_online_firmware": "Upload Online Firmware",
        "gui.editor.block": "blocks",
        "gui.editor.run": "Run",
        "gui.editor.running": "Running",
        "gui.modal.deleteVariable": "Delete Variable",
        "gui.modal.confirmDeleteVariable": "Delete %1 uses of the %2 variable?",
        "gui.modal.deleteBlocks": "Delete Blocks",
        "gui.spriteSelectorItem.contextMenuExport": "Export",
        "gui.crash.reload": "Reload",
        "gui.crash.title": "Oops! Something went wrong.",
        "gui.crash.content": "We are so sorry, but it looks like mblock has crashed.\nThis bug has been automatically reported to the mblock Team. Please refresh your page to try again.",
        "procedures_delete_block_definition_tip": "To delete a block definition, first remove all uses of the block",
        "BUTTON.OK.TEXT": "OK",
        "BUTTON.CANCEL.TEXT": "Cancel",
        "gui.gui.deviceNotCompatible": "Device not compatible",
        "gui.soundTab.uploadSound": "Upload sound"
    }
}

}